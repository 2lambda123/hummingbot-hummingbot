[
  "test/connector/test_in_flight_order_base.py::InFlightOrderBaseTests::test_creation_timestamp_taken_from_order_id_when_not_specified",
  "test/connector/test_in_flight_order_base.py::InFlightOrderBaseTests::test_deserialize_order_from_json",
  "test/connector/test_in_flight_order_base.py::InFlightOrderBaseTests::test_get_creation_timestamp",
  "test/connector/test_in_flight_order_base.py::InFlightOrderBaseTests::test_serialize_order_to_json",
  "test/connector/test_in_flight_order_base.py::InFlightOrderBaseTests::test_string_repr",
  "test/connector/test_in_flight_order_base.py::InFlightOrderBaseTests::test_to_limit_order",
  "test/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_active_campaigns",
  "test/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_campaign_summary",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_market.py::BinancePerpetualMarketUnitTest::test_buy_and_sell_order_then_cancel_account_orders",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_market.py::BinancePerpetualMarketUnitTest::test_buy_and_sell_order_then_cancel_all",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_market.py::BinancePerpetualMarketUnitTest::test_buy_and_sell_order_then_cancel_individually",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_market.py::BinancePerpetualMarketUnitTest::test_network_status",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_market.py::BinancePerpetualMarketUnitTest::test_order_fill_event",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_utils.py::TradingPairUtilsTest::test_convert_to_exchange_format_three_letters_base_and_four_letters_quote",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_utils.py::TradingPairUtilsTest::test_convert_to_exchange_format_three_letters_base_and_three_letters_quote",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_utils.py::TradingPairUtilsTest::test_convert_to_exchange_format_three_letters_base_and_three_letters_quote_matching_with_a_four_letters_quote_candidate",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_utils.py::TradingPairUtilsTest::test_parse_three_letters_base_and_four_letters_quote",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_utils.py::TradingPairUtilsTest::test_parse_three_letters_base_and_three_letters_quote",
  "test/connector/derivative/binance_perpetual/test_binance_perpetual_utils.py::TradingPairUtilsTest::test_parse_three_letters_base_and_three_letters_quote_matching_with_a_four_letters_quote_candidate",
  "test/connector/exchange/altmarkets/test_altmarkets_order_book_tracker.py::AltmarketsOrderBookTrackerUnitTest::test_api_get_last_traded_prices",
  "test/connector/exchange/altmarkets/test_altmarkets_order_book_tracker.py::AltmarketsOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/altmarkets/test_altmarkets_order_book_tracker.py::AltmarketsOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/bitfinex/test_bitfinex_api_order_book_data_source.py::BitfinexAPIOrderBookDataSourceUnitTest::test_get_trading_pairs",
  "test/connector/exchange/bitfinex/test_bitfinex_api_order_book_data_source.py::BitfinexAPIOrderBookDataSourceUnitTest::test_size_snapshot",
  "test/connector/exchange/bitfinex/test_bitfinex_auth.py::TestAuth::test_auth",
  "test/connector/exchange/bitfinex/test_bitfinex_order_book_tracker.py::BitfinexOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/bitfinex/test_bitfinex_order_book_tracker.py::BitfinexOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/bitfinex/test_bitfinex_user_steam_tracker.py::BitfinexUserStreamTrackerUnitTest::test_user_stream",
  "test/connector/exchange/bittrex/test_bittrex_order_book_tracker.py::BittrexOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/bittrex/test_bittrex_order_book_tracker.py::BittrexOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/bittrex/test_bittrex_user_stream_tracker.py::BittrexUserStreamTrackerUnitTest::test_user_stream",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_active_order_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_buy_diff_message",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_active_order_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_diff_message_not_found",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_active_order_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_sell_diff_message",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_order_book_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_api_get_last_traded_prices",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_order_book_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_diff_msg_get_added_to_order_book",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_order_book_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_order_book_data_source",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_order_book_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_order_book_tracker.py::CoinbaseProOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_user_stream_tracker.py::CoinbaseProUserStreamTrackerUnitTest::test_limit_order_cancelled",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_user_stream_tracker.py::CoinbaseProUserStreamTrackerUnitTest::test_limit_order_filled",
  "test/connector/exchange/coinbase_pro/test_coinbase_pro_user_stream_tracker.py::CoinbaseProUserStreamTrackerUnitTest::test_user_stream_manually",
  "test/connector/exchange/crypto_com/test_crypto_com_auth.py::TestAuth::test_auth",
  "test/connector/exchange/crypto_com/test_crypto_com_order_book_tracker.py::CryptoComOrderBookTrackerUnitTest::test_api_get_last_traded_prices",
  "test/connector/exchange/crypto_com/test_crypto_com_order_book_tracker.py::CryptoComOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/crypto_com/test_crypto_com_order_book_tracker.py::CryptoComOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/hitbtc/test_hitbtc_auth.py::TestAuth::test_rest_auth",
  "test/connector/exchange/hitbtc/test_hitbtc_auth.py::TestAuth::test_ws_auth",
  "test/connector/exchange/hitbtc/test_hitbtc_currencies.py::TestAuth::test_all_trading_pairs_matched",
  "test/connector/exchange/hitbtc/test_hitbtc_order_book_tracker.py::HitbtcOrderBookTrackerUnitTest::test_api_get_last_traded_prices",
  "test/connector/exchange/hitbtc/test_hitbtc_order_book_tracker.py::HitbtcOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/hitbtc/test_hitbtc_order_book_tracker.py::HitbtcOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/k2/test_k2_auth.py::K2AuthUnitTest::test_rest_auth",
  "test/connector/exchange/k2/test_k2_auth.py::K2AuthUnitTest::test_ws_auth",
  "test/connector/exchange/k2/test_k2_order_book_tracker.py::K2OrderBookTrackerUnitTest::test_api_get_last_traded_prices",
  "test/connector/exchange/k2/test_k2_order_book_tracker.py::K2OrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/k2/test_k2_order_book_tracker.py::K2OrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/kraken/test_kraken_api_order_book_data_source.py::KrakenAPIOrderBookDataSourceUnitTest::test_get_snapshot",
  "test/connector/exchange/kraken/test_kraken_api_order_book_data_source.py::KrakenAPIOrderBookDataSourceUnitTest::test_get_tracking_pairs",
  "test/connector/exchange/kraken/test_kraken_api_order_book_data_source.py::KrakenAPIOrderBookDataSourceUnitTest::test_get_trading_pairs",
  "test/connector/exchange/kraken/test_kraken_api_user_stream_data_source.py::KrakenAPIOrderBookDataSourceUnitTest::test_get_auth_token",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_cancel_all",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_cancel_order",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_fee_overrides_config",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_get_fee",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_limit_sell",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_limit_taker_buy",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_order_fill_record",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_order_saving_and_restoration",
  "test/connector/exchange/kraken/test_kraken_market.py::KrakenExchangeUnitTest::test_pair_convesion",
  "test/connector/exchange/kraken/test_kraken_order_book_tracker.py::KrakenOrderBookTrackerUnitTest::test_data_source",
  "test/connector/exchange/kraken/test_kraken_order_book_tracker.py::KrakenOrderBookTrackerUnitTest::test_name",
  "test/connector/exchange/kraken/test_kraken_order_book_tracker.py::KrakenOrderBookTrackerUnitTest::test_start_stop",
  "test/connector/exchange/kraken/test_kraken_user_stream_tracker.py::KrakenUserStreamTrackerUnitTest::test_user_stream",
  "test/connector/exchange/loopring/test_loopring_api_order_book_data_source.py::LoopringAPIOrderBookDataSourceUnitTest::test_get_snapshot",
  "test/connector/exchange/loopring/test_loopring_market.py::LoopringExchangeUnitTest::test_cancel_order",
  "test/connector/exchange/loopring/test_loopring_market.py::LoopringExchangeUnitTest::test_get_available_balances",
  "test/connector/exchange/loopring/test_loopring_market.py::LoopringExchangeUnitTest::test_get_balances",
  "test/connector/exchange/loopring/test_loopring_market.py::LoopringExchangeUnitTest::test_get_fee",
  "test/connector/exchange/loopring/test_loopring_market.py::LoopringExchangeUnitTest::test_limit_orders",
  "test/connector/exchange/loopring/test_loopring_market.py::LoopringExchangeUnitTest::test_place_limit_buy_and_sell",
  "test/connector/exchange/loopring/test_loopring_market.py::LoopringExchangeUnitTest::test_place_market_buy_and_sell",
  "test/connector/exchange/loopring/test_loopring_order_book_tracker.py::LoopringOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/loopring/test_loopring_order_book_tracker.py::LoopringOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/connector/exchange/loopring/test_loopring_token_configuration_data_source.py::LoopringAPITokenConfigurationUnitTest::test_configs",
  "test/connector/exchange/loopring/test_loopring_token_configuration_data_source.py::LoopringAPITokenConfigurationUnitTest::test_conversion",
  "test/connector/exchange/loopring/test_loopring_token_configuration_data_source.py::LoopringAPITokenConfigurationUnitTest::test_padding",
  "test/connector/exchange/loopring/test_loopring_user_stream_tracker.py::LoopringAPIOrderBookDataSourceUnitTest::test_user_stream",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_cancel_all",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_cancel_order",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_fee_overrides_config",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_get_fee",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_limit_maker_rejections",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_limit_makers_unfilled",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_limit_taker_buy",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_limit_taker_sell",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_order_fill_record",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_orders_saving_and_restoration",
  "test/connector/exchange/mexc/test_mexc_market.py::MexcExchangeUnitTest::test_update_last_prices",
  "test/connector/exchange/probit/test_probit_auth.py::ProbitAuthUnitTest::test_rest_auth",
  "test/connector/exchange/probit/test_probit_auth.py::ProbitAuthUnitTest::test_ws_auth",
  "test/connector/exchange/probit/test_probit_order_book_tracker.py::ProbitOrderBookTrackerUnitTest::test_api_get_last_traded_prices",
  "test/connector/exchange/probit/test_probit_order_book_tracker.py::ProbitOrderBookTrackerUnitTest::test_order_book_trade_event_emission",
  "test/connector/exchange/probit/test_probit_order_book_tracker.py::ProbitOrderBookTrackerUnitTest::test_tracker_integrity",
  "test/debug/test_paper_trade_market.py::PaperTradeExchangeTest::test_ask_limit_order_trade_match",
  "test/debug/test_paper_trade_market.py::PaperTradeExchangeTest::test_bid_limit_order_trade_match",
  "test/debug/test_paper_trade_market.py::PaperTradeExchangeTest::test_limit_order_crossed",
  "test/debug/test_paper_trade_market.py::PaperTradeExchangeTest::test_market_order_simulation",
  "test/debug/test_paper_trade_market.py::PaperTradeExchangeTest::test_order_cancel_all",
  "test/debug/test_paper_trade_market.py::PaperTradeExchangeTest::test_order_cancellation",
  "test/debug/test_paper_trade_market.py::PaperTradeExchangeTest::test_place_market_orders",
  "test/hummingbot/test_hummingbot_application.py::HummingbotApplicationTest::test_set_strategy_file_name",
  "test/hummingbot/test_hummingbot_application.py::HummingbotApplicationTest::test_set_strategy_file_name_to_none",
  "test/hummingbot/client/test_connector_setting.py::ConnectorSettingTests::test_connector_setting_creates_non_trading_connector_instance",
  "test/hummingbot/client/test_formatter.py::FormatterTest::test_format_decimal_obj_decimal_places_rounded",
  "test/hummingbot/client/test_formatter.py::FormatterTest::test_format_decimal_obj_places_no_rounding",
  "test/hummingbot/client/test_formatter.py::FormatterTest::test_format_float_decimal_places_rounded",
  "test/hummingbot/client/test_formatter.py::FormatterTest::test_format_float_places_no_rounding",
  "test/hummingbot/client/test_formatter.py::FormatterTest::test_format_large_decimal_obj",
  "test/hummingbot/client/test_formatter.py::FormatterTest::test_format_large_float",
  "test/hummingbot/client/test_formatter.py::FormatterTest::test_precision_assumption",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_aggregated_position_for_unrelated_trades",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_aggregated_position_with_no_trades",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_aggregated_position_with_two_related_trades_from_three",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_calculate_fees_in_quote_for_one_trade_fill_with_fees_different_tokens",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_calculate_fees_in_quote_for_one_trade_with_fees_different_tokens",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_performance_metrics",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_performance_metrics_for_derivatives",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_position_order_returns_nothing_when_no_open_and_no_close_orders",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_position_order_returns_open_and_close_pair",
  "test/hummingbot/client/test_performance.py::PerformanceMetricsUnitTest::test_smart_round",
  "test/hummingbot/client/test_settings.py::SettingsTest::test_non_trading_connector_instance_with_default_configuration_secrets_revealed",
  "test/hummingbot/client/command/test_balance_command.py::BalanceCommandTest::test_show_balances",
  "test/hummingbot/client/command/test_balance_command.py::BalanceCommandTest::test_show_balances_empty_balances",
  "test/hummingbot/client/command/test_balance_command.py::BalanceCommandTest::test_show_balances_handles_network_timeouts",
  "test/hummingbot/client/command/test_config_command.py::ConfigCommandTest::test_config_non_configurable_key_fails",
  "test/hummingbot/client/command/test_config_command.py::ConfigCommandTest::test_config_single_keys",
  "test/hummingbot/client/command/test_config_command.py::ConfigCommandTest::test_list_configs",
  "test/hummingbot/client/command/test_config_command.py::ConfigCommandTest::test_list_configs_pydantic_model",
  "test/hummingbot/client/command/test_connect_command.py::ConnectCommandTest::test_connect_exchange_handles_network_timeouts",
  "test/hummingbot/client/command/test_connect_command.py::ConnectCommandTest::test_connect_exchange_success",
  "test/hummingbot/client/command/test_connect_command.py::ConnectCommandTest::test_connection_df_handles_network_timeouts",
  "test/hummingbot/client/command/test_connect_command.py::ConnectCommandTest::test_connection_df_handles_network_timeouts_logs_hidden",
  "test/hummingbot/client/command/test_connect_command.py::ConnectCommandTest::test_show_connections",
  "test/hummingbot/client/command/test_create_command.py::CreateCommandTest::test_create_command_restores_config_map_after_config_stop",
  "test/hummingbot/client/command/test_create_command.py::CreateCommandTest::test_create_command_restores_config_map_after_config_stop_on_new_file_prompt",
  "test/hummingbot/client/command/test_create_command.py::CreateCommandTest::test_prompt_for_configuration_accepts_zero_amount_on_get_last_price_network_timeout",
  "test/hummingbot/client/command/test_create_command.py::CreateCommandTest::test_prompt_for_configuration_handles_status_network_timeout",
  "test/hummingbot/client/command/test_create_command.py::CreateCommandTest::test_prompt_for_configuration_re_prompts_on_lower_than_minimum_amount",
  "test/hummingbot/client/command/test_history_command.py::HistoryCommandTest::test_history_report_raises_on_get_current_balances_network_timeout",
  "test/hummingbot/client/command/test_history_command.py::HistoryCommandTest::test_list_trades",
  "test/hummingbot/client/command/test_import_command.py::ImportCommandTest::test_import_config_file_handles_network_timeouts_legacy",
  "test/hummingbot/client/command/test_import_command.py::ImportCommandTest::test_import_config_file_success",
  "test/hummingbot/client/command/test_import_command.py::ImportCommandTest::test_import_config_file_success_legacy",
  "test/hummingbot/client/command/test_import_command.py::ImportCommandTest::test_import_config_file_wrong_name",
  "test/hummingbot/client/command/test_import_command.py::ImportCommandTest::test_import_incomplete_config_file_success",
  "test/hummingbot/client/command/test_order_book_command.py::OrderBookCommandTest::test_show_order_book",
  "test/hummingbot/client/command/test_previous_command.py::PreviousCommandUnitTest::test_no_previous_strategy_found",
  "test/hummingbot/client/command/test_previous_command.py::PreviousCommandUnitTest::test_strategy_found_and_user_accepts",
  "test/hummingbot/client/command/test_previous_command.py::PreviousCommandUnitTest::test_strategy_found_and_user_declines",
  "test/hummingbot/client/command/test_rate_command.py::RateCommandTests::test_show_token_value",
  "test/hummingbot/client/command/test_rate_command.py::RateCommandTests::test_show_token_value_rate_not_available",
  "test/hummingbot/client/command/test_status_command.py::StatusCommandTest::test_status_check_all_handles_network_timeouts",
  "test/hummingbot/client/command/test_ticker_command.py::TickerCommandTest::test_show_ticker",
  "test/hummingbot/client/config/test_config_data_types.py::BaseClientModelTest::test_config_paths_includes_all_intermediate_keys",
  "test/hummingbot/client/config/test_config_data_types.py::BaseClientModelTest::test_generate_yml_output_dict_with_comments",
  "test/hummingbot/client/config/test_config_data_types.py::BaseClientModelTest::test_generate_yml_output_dict_with_secret",
  "test/hummingbot/client/config/test_config_data_types.py::BaseClientModelTest::test_schema_encoding_removes_client_data_functions",
  "test/hummingbot/client/config/test_config_data_types.py::BaseClientModelTest::test_traverse",
  "test/hummingbot/client/config/test_config_helpers.py::ConfigHelpersTest::test_get_strategy_config_map",
  "test/hummingbot/client/config/test_config_helpers.py::ConfigHelpersTest::test_load_connector_config_map_from_file_with_secrets",
  "test/hummingbot/client/config/test_config_helpers.py::ConfigHelpersTest::test_save_command_shortcuts_to_yml",
  "test/hummingbot/client/config/test_config_helpers.py::ConfigHelpersTest::test_save_to_yml",
  "test/hummingbot/client/config/test_config_helpers.py::ReadOnlyClientAdapterTest::test_read_only_adapter_can_be_created",
  "test/hummingbot/client/config/test_config_helpers.py::ReadOnlyClientAdapterTest::test_read_only_adapter_raises_exception_when_setting_value",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_bool_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_bool_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_connector_connector_does_not_exist",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_connector_connector_exist",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_derivative_connector_does_not_exist",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_derivative_connector_exist",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_exchange_connector_does_not_exist",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_exchange_connector_exist",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_max_exclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_max_exclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_max_inclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_max_inclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_and_max_exclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_and_max_exclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_and_max_inclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_and_max_inclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_exclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_exclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_inclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_with_min_inclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_without_min_and_max_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_float_wrong_value_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_max_exclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_max_exclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_max_inclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_max_inclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_and_max_exclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_and_max_exclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_and_max_inclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_and_max_inclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_exclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_exclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_inclusive_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_with_min_inclusive_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_without_min_and_max_succeed",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validate_int_wrong_value_fails",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validation_does_not_fail_with_valid_timestamp_string",
  "test/hummingbot/client/config/test_config_validators.py::ConfigValidatorsTests::test_validation_fails_with_valid_timestamp_string",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_get_prompt",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_init_defaults_assigned",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_init_values_assigned",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_on_validated_called",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_required",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_required_assertion_error",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_validate_assertion_errors",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_validate_value_required",
  "test/hummingbot/client/config/test_config_var.py::ConfigVarTest::test_validator_functions_called",
  "test/hummingbot/client/config/test_security.py::SecurityTest::test_login",
  "test/hummingbot/client/config/test_security.py::SecurityTest::test_password_process",
  "test/hummingbot/client/config/test_security.py::SecurityTest::test_update_secure_config",
  "test/hummingbot/client/config/test_strategy_config_data_types.py::BaseStrategyConfigMapTest::test_generate_yml_output_dict_title",
  "test/hummingbot/client/config/test_strategy_config_data_types.py::BaseTradingStrategyConfigMapTest::test_jason_schema_includes_all_connectors_for_exchange_field",
  "test/hummingbot/client/config/test_strategy_config_data_types.py::BaseTradingStrategyConfigMapTest::test_validators",
  "test/hummingbot/client/config/test_strategy_config_data_types.py::BaseTradingStrategyMakerTakerConfigMapTests::test_maker_field_jason_schema_includes_all_connectors_for_exchange_field",
  "test/hummingbot/client/config/test_strategy_config_data_types.py::BaseTradingStrategyMakerTakerConfigMapTests::test_taker_field_jason_schema_includes_all_connectors_for_exchange_field",
  "test/hummingbot/client/ui/test_custom_widgets.py::CustomWidgetUnitTests::test_get_css_style_text_listed",
  "test/hummingbot/client/ui/test_custom_widgets.py::CustomWidgetUnitTests::test_get_css_style_text_not_listed",
  "test/hummingbot/client/ui/test_custom_widgets.py::CustomWidgetUnitTests::test_get_line_command_promt",
  "test/hummingbot/client/ui/test_custom_widgets.py::CustomWidgetUnitTests::test_get_line_index_error",
  "test/hummingbot/client/ui/test_custom_widgets.py::CustomWidgetUnitTests::test_get_line_match_found",
  "test/hummingbot/client/ui/test_custom_widgets.py::CustomWidgetUnitTests::test_get_line_no_match_found",
  "test/hummingbot/client/ui/test_hummingbot_cli.py::HummingbotCLITest::test_did_start_ui",
  "test/hummingbot/client/ui/test_hummingbot_cli.py::HummingbotCLITest::test_handle_tab_command_create_new_tab_and_display",
  "test/hummingbot/client/ui/test_hummingbot_cli.py::HummingbotCLITest::test_handle_tab_command_on_close_argument",
  "test/hummingbot/client/ui/test_hummingbot_cli.py::HummingbotCLITest::test_handle_tab_command_on_existing_tab",
  "test/hummingbot/client/ui/test_hummingbot_cli.py::HummingbotCLITest::test_tab_navigation",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_format_bytes",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_format_df_for_printout",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_format_df_for_printout_table_format_from_global_config",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_process_monitor",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_timer",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_trade_monitor_loop_continues_on_failure",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_trade_monitor_market_no_trade",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_trade_monitor_market_not_ready",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_trade_monitor_multi_loops",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_trade_monitor_multi_pairs_diff_quotes",
  "test/hummingbot/client/ui/test_interface_utils.py::InterfaceUtilsTest::test_start_trade_monitor_multi_pairs_same_quote",
  "test/hummingbot/client/ui/test_layout.py::LayoutTest::test_get_active_strategy",
  "test/hummingbot/client/ui/test_layout.py::LayoutTest::test_get_strategy_file",
  "test/hummingbot/client/ui/test_login_prompt.py::LoginPromptTest::test_login_blank_password_error_retries",
  "test/hummingbot/client/ui/test_login_prompt.py::LoginPromptTest::test_login_error_retries",
  "test/hummingbot/client/ui/test_login_prompt.py::LoginPromptTest::test_login_password_do_not_match_error_retries",
  "test/hummingbot/client/ui/test_login_prompt.py::LoginPromptTest::test_login_password_none_exit",
  "test/hummingbot/client/ui/test_login_prompt.py::LoginPromptTest::test_login_success",
  "test/hummingbot/client/ui/test_stdout_redirection.py::StdoutProxyTest::test_fileno",
  "test/hummingbot/client/ui/test_stdout_redirection.py::StdoutProxyTest::test_isatty",
  "test/hummingbot/client/ui/test_style.py::StyleTest::test_hex_to_ansi",
  "test/hummingbot/client/ui/test_style.py::StyleTest::test_load_style_unix",
  "test/hummingbot/client/ui/test_style.py::StyleTest::test_load_style_windows",
  "test/hummingbot/client/ui/test_style.py::StyleTest::test_reset_style",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_and_lock_available_collateral",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_buy_insufficient_funds_partial_adjustment_allowed",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_insufficient_funds_all_or_none",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_insufficient_funds_for_flat_fees_and_percent_fees",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_insufficient_funds_for_flat_fees_and_percent_fees_third_token",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_insufficient_funds_for_flat_fees_same_token",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_insufficient_funds_for_flat_fees_third_token",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_sell_insufficient_funds_partial_adjustment_allowed",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidate_sufficient_funds",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidates",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_adjust_candidates_resets_locked_collateral",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_populate_collateral_fields_buy_order",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_populate_collateral_fields_buy_order_percent_fee_from_returns",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_populate_collateral_fields_fixed_fees_in_quote_token",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_populate_collateral_fields_percent_fees_in_third_token",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_populate_collateral_fields_sell_order",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_populate_collateral_fields_taker_buy_order",
  "test/hummingbot/connector/test_budget_checker.py::BudgetCheckerTest::test_reset_locked_collateral",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_access_lost_orders",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_cached_order_max_cache_size",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_cached_order_ttl_exceeded",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_cached_order_ttl_not_exceeded",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_fetch_cached_order",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_fetch_cached_order_not_found",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_fetch_order_by_client_order_id",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_fetch_order_by_exchange_order_id",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_fetch_order_does_not_match_orders_with_undefined_exchange_id",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_fetch_tracked_order",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_fetch_tracked_order_not_found",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_lost_order_not_removed_when_updated_with_non_final_states",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_lost_order_removed_when_canceled",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_lost_order_removed_when_fully_filled",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_lost_orders_returned_in_all_fillable_orders",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_lost_orders_returned_in_all_updatable_orders",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_not_found_does_not_exceed_limit",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_not_found_exceeded_limit",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_not_found_invalid_order",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_update_invalid_order_update",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_update_order_not_found",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_update_trigger_completed_event_and_not_fill_event",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_update_trigger_order_cancelled_event",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_update_trigger_order_creation_event",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_update_trigger_order_creation_event_without_client_order_id",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_order_update_trigger_order_failure_event",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_trade_update_does_not_trigger_filled_event_update_status_when_completely_filled",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_process_trade_update_trigger_filled_event_flat_fee",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_start_tracking_order",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_stop_tracking_order",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_update_to_close_order_is_not_processed_until_order_completelly_filled",
  "test/hummingbot/connector/test_client_order_tracker.py::ClientOrderTrackerUnitTest::test_updating_order_states_with_both_process_order_update_and_process_trade_update",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_no_order_during_snapshot_is_the_registered_available_balance",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_no_orders_during_snapshot_and_two_current_orders",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_no_orders_during_snapshot_no_alive_orders_and_a_fill_event",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_partially_filled_orders_during_snapshot_and_no_current_orders",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_partially_filled_orders_during_snapshot_that_are_still_alive",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_unfilled_orders_during_snapshot_and_no_current_orders",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_unfilled_orders_during_snapshot_that_are_still_alive",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_estimated_available_balance_with_unfilled_orders_during_snapshot_two_current_partial_filled_and_extra_fill",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_fill_event_previous_to_balance_updated_is_ignored_for_estimated_available_balance",
  "test/hummingbot/connector/test_connector_base.py::ConnectorBaseUnitTest::test_in_flight_asset_balances",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_collect_metrics_does_not_dispatch_anything_when_no_events_registered",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_collect_metrics_for_single_event",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_collect_metrics_uses_event_amount_when_only_base_token_convertion_rate_found",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_instance_creation_using_configuration_parameters",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_metrics_not_collected_when_convertion_rate_to_volume_token_not_found",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_process_tick_does_not_collect_metrics_if_activation_interval_not_reached",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_process_tick_starts_metrics_collection_if_activation_interval_reached",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_start_and_stop_are_forwarded_to_dispatcher",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_start_registers_to_order_fill_event",
  "test/hummingbot/connector/test_connector_metrics_collector.py::TradeVolumeMetricCollectorTests::test_stop_unregisters_from_order_fill_event",
  "test/hummingbot/connector/test_markets_recorder.py::MarketsRecorderTests::test_buy_order_created_event_creates_order_record",
  "test/hummingbot/connector/test_markets_recorder.py::MarketsRecorderTests::test_create_order_and_completed",
  "test/hummingbot/connector/test_markets_recorder.py::MarketsRecorderTests::test_create_order_and_process_fill",
  "test/hummingbot/connector/test_markets_recorder.py::MarketsRecorderTests::test_get_trade_for_config",
  "test/hummingbot/connector/test_markets_recorder.py::MarketsRecorderTests::test_properties",
  "test/hummingbot/connector/test_markets_recorder.py::MarketsRecorderTests::test_sell_order_created_event_creates_order_record",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_active_campaigns_are_filtered_by_exchange_name",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_active_campaigns_are_filtered_by_token_pair",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_are_same_entity",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_active_campaigns_empty_markets",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_active_campaigns_failed_markets",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_active_campaigns_markets",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_active_campaigns_markets_wrong_id",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_active_markets",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_campaign_summary",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_campaign_summary_exception",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_campaign_summary_http_error",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_campaign_summary_logs_error_if_exception_happens",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_market_last_snapshot",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_market_snapshots",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_get_market_snapshots_returns_none",
  "test/hummingbot/connector/test_parrot.py::ParrotConnectorUnitTest::test_retrieve_active_campaigns_error_is_logged",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_account_positions",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_funding_info",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_funding_info_initialization",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_init",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_leverage",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_position_key",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_position_mode",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_updating_funding_info_logs_exception",
  "test/hummingbot/connector/test_perpetual_trading.py::PerpetualTest::test_updating_funding_info_success",
  "test/hummingbot/connector/test_time_synchronizer.py::TimeSynchronizerTests::test_time_calculated_with_mean_of_all_offsets",
  "test/hummingbot/connector/test_time_synchronizer.py::TimeSynchronizerTests::test_time_with_one_registered_offset",
  "test/hummingbot/connector/test_time_synchronizer.py::TimeSynchronizerTests::test_time_with_registered_offsets_returns_local_time",
  "test/hummingbot/connector/test_utils.py::UtilsTest::test_connector_config_maps",
  "test/hummingbot/connector/test_utils.py::UtilsTest::test_get_new_client_order_id",
  "test/hummingbot/connector/test_utils.py::UtilsTest::test_get_new_client_order_id_with_max_len_less_than_required_to_include_time_hashes_it",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_adjust_candidate_buy_insufficient_funds_partial_adjustment_allowed",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_adjust_candidate_sell_insufficient_funds_partial_adjustment_allowed",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_adjust_candidate_sufficient_funds",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_populate_collateral_fields_buy_order",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_populate_collateral_fields_buy_order_with_leverage",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_populate_collateral_fields_percent_fees_in_third_token",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_populate_collateral_fields_sell_order",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_populate_collateral_fields_sell_order_with_leverage",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_populate_collateral_fields_taker_buy_order",
  "test/hummingbot/connector/derivative/test_perpetual_budget_checker.py::PerpetualBudgetCheckerTest::test_populate_collateral_for_position_close",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_channel_originating_message_returns_correct",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_get_funding_info",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_get_funding_info_from_exchange_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_get_new_order_book",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_get_snapshot_exception_raised",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_get_snapshot_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_funding_info_cancelled_error_raised",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled_error_raised",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_logs_exception_error_with_response",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_cancelled_when_connecting",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_subscribe_to_channels_raises_cancel_exception",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_api_order_book_data_source.py::BinancePerpetualAPIOrderBookDataSourceUnitTests::test_subscribe_to_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_auth.py::BinancePerpetualAuthUnitTests::test_generate_signature_from_payload",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_auth.py::BinancePerpetualAuthUnitTests::test_rest_authenticate_data_provided",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_auth.py::BinancePerpetualAuthUnitTests::test_rest_authenticate_parameters_provided",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_auth.py::BinancePerpetualAuthUnitTests::test_ws_authenticate",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_account_info_request_includes_timestamp",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_account_position_updated_on_positions_update",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_account_position_updated_on_stream_event",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_buy_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_cancel_all_exception",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_cancel_all_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_cancel_all_unknown_order",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_cancel_order_failed",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_cancel_order_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_client_order_id_on_order",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_closed_account_position_removed_on_positions_update",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_closed_account_position_removed_on_stream_event",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_create_limit_maker_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_create_order_exception",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_create_order_min_notional_size_failure",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_create_order_min_order_size_failure",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_create_order_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_existing_account_position_detected_on_positions_update",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_fee_is_zero_when_not_included_in_fill_event",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_fetch_funding_payment_failed",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_fetch_funding_payment_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_format_trading_rules",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_format_trading_rules_exception",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_get_collateral_token",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_limit_orders",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_margin_call_event",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_new_account_position_detected_on_positions_update",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_new_account_position_detected_on_stream_event",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_order_event_with_cancelled_status_marks_order_as_cancelled",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_order_fill_event_ignored_for_repeated_trade_id",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_request_order_status_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_sell_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_set_leverage_failed",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_set_leverage_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_set_position_initial_mode_unchanged",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_set_position_mode_diff_initial_mode_change_fail",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_set_position_mode_diff_initial_mode_change_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_set_position_mode_initial_mode_is_none",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_supported_position_modes",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_update_balances",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_update_order_fills_from_trades_failed",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_update_order_fills_from_trades_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_update_order_status_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_derivative.py::BinancePerpetualDerivativeUnitTest::test_user_stream_event_listener_raises_cancelled_error",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_create_websocket_connection_log_exception",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_get_listen_key_exception_raised",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_get_listen_key_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_last_recv_time",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_create_websocket_connection_failed",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_does_not_queue_empty_payload",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_manage_listen_key_task_loop_keep_alive_failed",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_manage_listen_key_task_loop_keep_alive_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_ping_listen_key_failed_log_warning",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_user_stream_data_source.py::BinancePerpetualUserStreamDataSourceUnitTests::test_ping_listen_key_successful",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_web_utils.py::BinancePerpetualWebUtilsUnitTests::test_binance_perpetual_rest_pre_processor_non_post_request",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_web_utils.py::BinancePerpetualWebUtilsUnitTests::test_binance_perpetual_rest_pre_processor_post_request",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_web_utils.py::BinancePerpetualWebUtilsUnitTests::test_build_api_factory",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_web_utils.py::BinancePerpetualWebUtilsUnitTests::test_rest_url_main_domain",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_web_utils.py::BinancePerpetualWebUtilsUnitTests::test_rest_url_testnet_domain",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_web_utils.py::BinancePerpetualWebUtilsUnitTests::test_wss_url_main_domain",
  "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_web_utils.py::BinancePerpetualWebUtilsUnitTests::test_wss_url_testnet_domain",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py::BitgetPerpetualAuthTests::test_add_auth_to_rest_request",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py::BitgetPerpetualAuthTests::test_no_auth_added_to_ws_request",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py::BitgetPerpetualAuthTests::test_ws_auth_payload",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_all_trading_pairs",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_check_network_failure",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_check_network_success",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_collateral_token_balance_not_updated_for_order_creation_event_to_not_open_position",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_collateral_token_balance_updated_when_processing_order_cancelation_update",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_collateral_token_balance_updated_when_processing_order_creation_update",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_collateral_token_balance_updated_when_processing_order_creation_update_considering_leverage",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_create_order_to_close_long_position",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_create_order_to_close_short_position",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_create_order_with_invalid_position_action_raises_value_error",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_exchange_symbol_associated_to_pair_without_product_type",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_funding_payment_polling_loop_sends_update_event",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_get_buy_and_sell_collateral_tokens",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_get_buy_and_sell_collateral_tokens_without_trading_rules",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_initial_status_dict",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_listen_for_funding_info_update_initializes_funding_info",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_listen_for_funding_info_update_updates_funding_info",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_set_leverage_failure",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_set_leverage_success",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_set_position_mode_failure",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_set_position_mode_success",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_supported_order_types",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_supported_position_modes",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_time_synchronizer_related_reqeust_error_detection",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_balances",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_balances_for_tokens_in_several_product_type_markets",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_trading_fees",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_trading_rules",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_user_stream_empty_position_event_removes_current_position",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_derivative.py::BitgetPerpetualDerivativeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_events_enqueued_correctly_after_channel_detection",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_get_funding_info",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_funding_info_cancelled_when_listening",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_funding_info_logs_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_funding_info_successful",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_rest_snapshots_successful",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_for_usd_product_type_pair",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_for_usdc_product_type_pair",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_subscribes_to_trades_diffs_and_funding_info",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_order_book_data_source.py::BitgetPerpetualAPIOrderBookDataSourceTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_user_stream_data_source.py::BitgetPerpetualUserStreamDataSourceTests::test_listen_for_user_stream_authentication_failure",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_user_stream_data_source.py::BitgetPerpetualUserStreamDataSourceTests::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_user_stream_data_source.py::BitgetPerpetualUserStreamDataSourceTests::test_listen_for_user_stream_does_not_queue_empty_payload",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_user_stream_data_source.py::BitgetPerpetualUserStreamDataSourceTests::test_listening_process_authenticates_and_subscribes_to_events",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_user_stream_data_source.py::BitgetPerpetualUserStreamDataSourceTests::test_listening_process_canceled_on_cancel_exception",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_web_utils.py::BitgetPerpetualWebUtilsTest::test_get_current_server_time",
  "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_web_utils.py::BitgetPerpetualWebUtilsTest::test_get_rest_url_for_endpoint",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_convert_from_exchange_trading_pair_not_found",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_convert_from_exchange_trading_pair_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_convert_to_exchange_trading_pair_not_found",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_convert_to_exchange_trading_pair_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_funding_info",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_funding_info_from_exchange_error_response",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_funding_info_from_exchange_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_last_traded_prices",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_new_order_book",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_snapshot_exception_raised",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_snapshot_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_get_throttler_instance",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_init_trading_pair_symbols_failure",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_init_trading_pair_symbols_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled_error_raised",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_logs_exception_error_with_response",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_cancelled_when_connecting",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_trading_pair_symbol_map_dictionary_initialized",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_api_order_book_data_source.py::BitmexPerpetualAPIOrderBookDataSourceUnitTests::test_trading_pair_symbol_map_dictionary_not_initialized",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py::BitmexPerpetualAuthUnitTests::test_generate_signature_from_payload",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py::BitmexPerpetualAuthUnitTests::test_generate_ws_signature",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py::BitmexPerpetualAuthUnitTests::test_rest_authenticate_data_provided",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py::BitmexPerpetualAuthUnitTests::test_rest_authenticate_no_parameters_provided",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py::BitmexPerpetualAuthUnitTests::test_rest_authenticate_parameters_provided",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_account_position_updated_on_positions_update",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_account_position_updated_on_stream_event",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_adjust_quote_based_amounts",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_buy_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_cancel_all_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_cancel_unknown_new_order",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_cancel_unknown_old_order",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_client_order_id_on_order",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_closed_account_position_removed_on_positions_update",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_closed_account_position_removed_on_stream_event",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_create_order_exception",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_create_order_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_existing_account_position_detected_on_positions_update",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_format_trading_rules",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_get_collateral_token",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_new_account_position_detected_on_positions_update",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_new_account_position_detected_on_stream_event",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_order_event_with_cancelled_status_marks_order_as_cancelled",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_sell_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_set_leverage_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_set_position_mode_initial_mode_is_none",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_update_balances",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_update_order_status_failure_old_order",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_update_order_status_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_update_trading_rules",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_derivative.py::BitmexPerpetualDerivativeUnitTest::test_user_stream_event_listener_raises_cancelled_error",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_book_tracker.py::BitmexPerpetualOrderBookTrackerUnitTests::test_exchange_name",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_book_tracker.py::BitmexPerpetualOrderBookTrackerUnitTests::test_order_book_diff_router_snapshot_uid_above_diff_message_update_id",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_book_tracker.py::BitmexPerpetualOrderBookTrackerUnitTests::test_order_book_diff_router_snapshot_uid_below_diff_message_update_id",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_book_tracker.py::BitmexPerpetualOrderBookTrackerUnitTests::test_order_book_diff_router_trading_pair_not_found_append_to_saved_message_queue",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_book_tracker.py::BitmexPerpetualOrderBookTrackerUnitTests::test_track_single_book_diff_message",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_book_tracker.py::BitmexPerpetualOrderBookTrackerUnitTests::test_track_single_book_snapshot_message_no_past_diffs",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_book_tracker.py::BitmexPerpetualOrderBookTrackerUnitTests::test_track_single_book_snapshot_message_with_past_diffs",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_status.py::BitmexPerpetualOrderStatusUnitTests::test_ge",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_status.py::BitmexPerpetualOrderStatusUnitTests::test_gt",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_status.py::BitmexPerpetualOrderStatusUnitTests::test_le",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_order_status.py::BitmexPerpetualOrderStatusUnitTests::test_lt",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_user_stream_data_source.py::BitmexPerpetualUserStreamDataSourceUnitTests::test_create_websocket_connection_log_exception",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_user_stream_data_source.py::BitmexPerpetualUserStreamDataSourceUnitTests::test_last_recv_time",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_user_stream_data_source.py::BitmexPerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_create_websocket_connection_failed",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_user_stream_data_source.py::BitmexPerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_does_not_queue_empty_payload",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_user_stream_data_source.py::BitmexPerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_user_stream_data_source.py::BitmexPerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_successful",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_utils.py::BitmexPerpetualUtilsUnitTests::test_get_trading_pair_index_and_tick_size",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_utils.py::BitmexPerpetualUtilsUnitTests::test_get_trading_pair_size_currency",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_web_utils.py::BitmexPerpetualWebUtilsUnitTests::test_bitmex_perpetual_rest_pre_processor_non_post_request",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_web_utils.py::BitmexPerpetualWebUtilsUnitTests::test_bitmex_perpetual_rest_pre_processor_post_request",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_web_utils.py::BitmexPerpetualWebUtilsUnitTests::test_build_api_factory",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_web_utils.py::BitmexPerpetualWebUtilsUnitTests::test_rest_url_main_domain",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_web_utils.py::BitmexPerpetualWebUtilsUnitTests::test_rest_url_testnet_domain",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_web_utils.py::BitmexPerpetualWebUtilsUnitTests::test_wss_url_main_domain",
  "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_web_utils.py::BitmexPerpetualWebUtilsUnitTests::test_wss_url_testnet_domain",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_get_funding_info",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_funding_info_cancelled_when_listening",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_funding_info_logs_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_funding_info_successful",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_subscribes_to_trades_diffs_and_funding_info",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_subscribe_to_channels_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_api_order_book_data_source.py::BybitPerpetualAPIOrderBookDataSourceTests::test_subscribe_to_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py::BybitPerpetualAuthTests::test_add_auth_to_rest_request",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py::BybitPerpetualAuthTests::test_no_auth_added_to_ws_request",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py::BybitPerpetualAuthTests::test_ws_auth_payload",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_all_trading_pairs",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_check_network_failure",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_check_network_success",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_create_order_to_close_long_position",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_create_order_to_close_short_position",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_create_order_with_invalid_position_action_raises_value_error",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_funding_payment_polling_loop_sends_update_event",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_get_buy_and_sell_collateral_tokens",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_get_position_index",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_initial_status_dict",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_listen_for_funding_info_update_initializes_funding_info",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_listen_for_funding_info_update_updates_funding_info",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_resolving_trading_pair_symbol_duplicates_on_trading_rules_update_cannot_resolve",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_resolving_trading_pair_symbol_duplicates_on_trading_rules_update_first_is_good",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_resolving_trading_pair_symbol_duplicates_on_trading_rules_update_second_is_good",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_set_leverage_failure",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_set_leverage_success",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_set_position_mode_failure",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_set_position_mode_nonlinear",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_set_position_mode_success",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_supported_order_types",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_supported_position_modes",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_time_synchronizer_related_reqeust_error_detection",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_balances",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_trading_rules",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_derivative.py::BybitPerpetualDerivativeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_user_stream_data_source.py::BybitPerpetualUserStreamDataSourceTests::test_listen_for_user_stream_authentication_failure",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_user_stream_data_source.py::BybitPerpetualUserStreamDataSourceTests::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_user_stream_data_source.py::BybitPerpetualUserStreamDataSourceTests::test_listen_for_user_stream_does_not_queue_empty_payload",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_user_stream_data_source.py::BybitPerpetualUserStreamDataSourceTests::test_listening_process_authenticates_and_subscribes_to_events",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_user_stream_data_source.py::BybitPerpetualUserStreamDataSourceTests::test_listening_process_canceled_on_cancel_exception",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_utils.py::BybitPerpetualUtilsTests::test_get_linear_non_linear_split",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_utils.py::BybitPerpetualUtilsTests::test_get_next_funding_timestamp",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_utils.py::BybitPerpetualUtilsTests::test_is_exchange_information_valid",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_web_utils.py::BybitPerpetualWebUtilsTest::test_get_rest_url_for_endpoint",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_web_utils.py::BybitPerpetualWebUtilsTest::test_wss_linear_private_url",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_web_utils.py::BybitPerpetualWebUtilsTest::test_wss_linear_public_url",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_web_utils.py::BybitPerpetualWebUtilsTest::test_wss_non_linear_private_url",
  "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_web_utils.py::BybitPerpetualWebUtilsTest::test_wss_non_linear_public_url",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_get_last_trade_prices",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_get_new_order_book",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_get_snapshot_raise_io_error",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_get_snapshot_raises_error",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_get_snapshot_successful",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancelled_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_logs_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_successful",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_subscribe_channels_canceled",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_subscribe_channels_error",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_api_order_book_data_source.py::DydxPerpetualAPIOrderBookDataSourceUnitTests::test_subscribe_channels_successful",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_auth.py::DydxPerpetualAuthTests::test_add_auth_to_rest_request",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_auth.py::DydxPerpetualAuthTests::test_add_auth_to_ws_request",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_auth.py::DydxPerpetualAuthTests::test_get_order_signature",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_all_trading_pairs",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_check_network_failure",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_check_network_success",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_create_order_to_close_long_position",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_create_order_to_close_short_position",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_funding_payment_polling_loop_sends_update_event",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_get_buy_and_sell_collateral_tokens",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_initial_status_dict",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_listen_for_funding_info_update_initializes_funding_info",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_listen_for_funding_info_update_updates_funding_info",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_set_leverage_failure",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_set_leverage_success",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_set_position_mode_failure",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_set_position_mode_success",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_supported_order_types",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_supported_position_modes",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_balances",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_order_status_when_order_partially_filled_and_cancelled",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_trading_rules",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_derivative.py::DydxPerpetualDerivativeTests::test_user_stream_update_for_partially_cancelled_order",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_user_stream_data_source.py::DydxPerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_raises_cancelled_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_user_stream_data_source.py::DydxPerpetualUserStreamDataSourceUnitTests::test_listen_for_user_stream_raises_logs_exception",
  "test/hummingbot/connector/derivative/dydx_perpetual/test_dydx_perpetual_user_stream_data_source.py::DydxPerpetualUserStreamDataSourceUnitTests::test_ws_authentication_successful",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_get_funding_info",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_subscriptions_subscribes_to_trades_diffs_and_orderbooks",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_subscribe_to_channels_raises_cancel_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_api_order_book_data_source.py::GateIoPerpetualAPIOrderBookDataSourceTests::test_subscribe_to_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py::GateIoPerpetualAuthTests::test_add_auth_to_rest_request",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py::GateIoPerpetualAuthTests::test_no_auth_added_to_ws_request",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py::GateIoPerpetualAuthTests::test_ws_authenticate",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_all_trading_pairs",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_check_network_failure",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_check_network_success",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_create_order_to_close_long_position",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_create_order_to_close_short_position",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_create_order_with_invalid_position_action_raises_value_error",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_funding_payment_polling_loop_sends_update_event",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_get_buy_and_sell_collateral_tokens",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_initial_status_dict",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_listen_for_funding_info_update_initializes_funding_info",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_listen_for_funding_info_update_updates_funding_info",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_resolving_trading_pair_symbol_duplicates_on_trading_rules_update_cannot_resolve",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_resolving_trading_pair_symbol_duplicates_on_trading_rules_update_first_is_good",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_resolving_trading_pair_symbol_duplicates_on_trading_rules_update_second_is_good",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_set_leverage_failure",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_set_leverage_success",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_set_position_mode_failure",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_set_position_mode_success",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_supported_order_types",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_supported_position_modes",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_balances",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_trading_rules",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_position_update",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_remove_position_update",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_derivative.py::GateIoPerpetualDerivativeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_user_stream_data_source.py::TestGateIoPerpetualAPIUserStreamDataSource::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_user_stream_data_source.py::TestGateIoPerpetualAPIUserStreamDataSource::test_listen_for_user_stream_does_not_queue_pong_payload",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_user_stream_data_source.py::TestGateIoPerpetualAPIUserStreamDataSource::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_user_stream_data_source.py::TestGateIoPerpetualAPIUserStreamDataSource::test_listen_for_user_stream_skips_subscribe_unsubscribe_messages",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_user_stream_data_source.py::TestGateIoPerpetualAPIUserStreamDataSource::test_listen_for_user_stream_subscribes_to_orders_and_balances_events",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_web_utils.py::GateIoPerpetualWebUtilsTest::test_build_api_factory",
  "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_web_utils.py::GateIoPerpetualWebUtilsTest::test_public_rest_url",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_fetch_trading_pairs",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_fetch_trading_pairs_returns_empty_on_error",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_get_last_traded_prices_multiple",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_get_new_order_book",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_get_new_order_book_raises_error",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_order_book_diff",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_order_book_diff_handles_exception",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_order_book_diff_unrecognised",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_order_book_snapshot",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_snapshots_logs_exception_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_snapshots_successful",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_trades",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_trades_handles_exception",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_listen_for_trades_unrecognised",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_order_book_data_source.py::AltmarketsAPIOrderBookDataSourceTests::test_throttler_rates",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_user_stream_data_source.py::TestAltmarketsAPIUserStreamDataSource::test_listen_for_user_stream_skips_subscribe_unsubscribe_messages_updates_last_recv_time",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_api_user_stream_data_source.py::TestAltmarketsAPIUserStreamDataSource::test_listen_for_user_stream_user_trades",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_auth.py::AltmarketsAuthTests::test_get_headers",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_cancel_all",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_cancel_all_logs_exceptions",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_cancel_all_raises_on_no_trading_pairs",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_cancel_order_not_present_in_inflight_orders",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_check_network_not_connected_for_error_status",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_check_network_raises_cancelled_error",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_create_order",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_create_order_raises_on_asyncio_cancelled_error",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_execute_cancel",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_execute_cancel_failed_is_logged",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_execute_cancel_ignores_local_orders",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_execute_cancel_other_exceptions_are_logged",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_execute_cancel_raises_on_asyncio_cancelled_error",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_get_fee",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_get_open_orders",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_not_ready",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_process_trade_message_matching_order_by_internal_order_id",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_start_tracking_order",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_status_polling_loop",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_status_polling_loop_logs_other_exceptions",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_status_polling_loop_raises_on_asyncio_cancelled_error",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_stop_tracking_order",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_stop_tracking_order_exceed_not_found_limit",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_tick_no_poll",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_tick_sets_poll",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_balances_adds_new_balances",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_balances_removes_balances",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_balances_updates_balances",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_cancelled_event",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_logs_missing_data_in_response",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_no_exchange_id",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_no_exchange_id_failure",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_order_failed_event",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_order_fill",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_order_filled",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_order_status_unable_to_fetch_order_status",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_user_stream_event_queue_error_is_logged",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_user_stream_event_queue_notifies_async_cancel_errors",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_user_stream_order_event_registers_cancelled_event",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_user_stream_order_event_registers_failed_event",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_user_stream_order_event_registers_filled_event",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_exchange.py::AltmarketsExchangeTests::test_user_stream_order_event_registers_partial_fill_event",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_in_flight_order.py::AltmarketsInFlightOrderTests::test_order_is_local_after_creation",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_in_flight_order.py::AltmarketsInFlightOrderTests::test_order_state_is_new_after_update_exchange_order_id",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book.py::AltmarketsOrderBookTests::test_trade_message_from_exchange",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book_message.py::AltmarketsOrderBookMessageTests::test_equal_messages_have_equal_hash",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book_message.py::AltmarketsOrderBookMessageTests::test_equality_based_on_type_and_timestamp",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book_message.py::AltmarketsOrderBookMessageTests::test_init_error",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book_message.py::AltmarketsOrderBookMessageTests::test_instance_creation",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book_tracker.py::AltmarketsOrderBookTrackerUnitTest::test_can_get_price_after_order_book_init",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book_tracker.py::AltmarketsOrderBookTrackerUnitTest::test_init_order_books",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_order_book_tracker.py::AltmarketsOrderBookTrackerUnitTest::test_track_single_book_apply_snapshot",
  "test/hummingbot/connector/exchange/altmarkets/test_altmarkets_websocket.py::AltmarketsWebsocketTests::test_send_subscription_message",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_order_book_data_source.py::AscendExAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_user_stream_datasource.py::AscendExUserStreamTrackerTests::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_user_stream_datasource.py::AscendExUserStreamTrackerTests::test_listen_for_user_stream_does_not_queue_ping_payload",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_user_stream_datasource.py::AscendExUserStreamTrackerTests::test_listen_for_user_stream_get_listen_key_successful_with_user_update_event",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_user_stream_datasource.py::AscendExUserStreamTrackerTests::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_api_user_stream_datasource.py::AscendExUserStreamTrackerTests::test_listen_for_user_stream_subscribes_to_orders_and_balances_events",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_auth.py::AscendExAuthTests::test_authentication_headers",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_create_order_fails_with_error_response_and_raises_failure_event",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_exchange.py::AscendExExchangeTests::test_user_stream_update_for_order_full_fill_when_it_had_a_partial_fill",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_utils.py::AscendExUtilTestCases::test_is_pair_information_valid",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_web_utils.py::AscendExWebUtilsTests::test_public_rest_url",
  "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_web_utils.py::AscendExWebUtilsTests::test_rest_api_url_private",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_api_order_book_data_source.py::BinanceAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/binance/test_binance_auth.py::BinanceAuthTests::test_rest_authenticate",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_client_order_id_on_order",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_time_synchronizer_related_request_error_detection",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_fills_from_trades_triggers_filled_event",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_fills_from_trades_with_repeated_fill_triggers_only_one_event",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_fills_request_parameters",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_status_when_failed",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_time_synchronizer_failure_is_logged",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_time_synchronizer_raises_cancelled_error",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_time_synchronizer_successfully",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_user_stream_update_for_order_failure",
  "test/hummingbot/connector/exchange/binance/test_binance_exchange.py::BinanceExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/binance/test_binance_order_book.py::BinanceOrderBookTests::test_diff_message_from_exchange",
  "test/hummingbot/connector/exchange/binance/test_binance_order_book.py::BinanceOrderBookTests::test_snapshot_message_from_exchange",
  "test/hummingbot/connector/exchange/binance/test_binance_order_book.py::BinanceOrderBookTests::test_trade_message_from_exchange",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_get_listen_key_log_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_get_listen_key_successful",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_listen_for_user_stream_does_not_queue_empty_payload",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_listen_for_user_stream_get_listen_key_successful_with_user_update_event",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_manage_listen_key_task_loop_keep_alive_failed",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_manage_listen_key_task_loop_keep_alive_successful",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_ping_listen_key_log_exception",
  "test/hummingbot/connector/exchange/binance/test_binance_user_stream_data_source.py::BinanceUserStreamDataSourceUnitTests::test_ping_listen_key_successful",
  "test/hummingbot/connector/exchange/binance/test_binance_utils.py::BinanceUtilTestCases::test_is_exchange_information_valid",
  "test/hummingbot/connector/exchange/binance/test_binance_web_utils.py::BinanceUtilTestCases::test_private_rest_url",
  "test/hummingbot/connector/exchange/binance/test_binance_web_utils.py::BinanceUtilTestCases::test_public_rest_url",
  "test/hummingbot/connector/exchange/bitfinex/test_bitfinex_api_order_book_data_source.py::BitfinexAPIOrderBookDataSourceTests::test_get_last_traded_price",
  "test/hummingbot/connector/exchange/bitfinex/test_bitfinex_api_order_book_data_source.py::BitfinexAPIOrderBookDataSourceTests::test_get_last_traded_price_returns_zero_when_an_error_happens",
  "test/hummingbot/connector/exchange/bitfinex/test_bitfinex_exchange.py::BitfinexExchangeTests::test_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/exchange/bitfinex/test_bitfinex_in_flight_order.py::BitfinexInFlightOrderTests::test_fee_currency_is_translated_when_processing_trade_event",
  "test/hummingbot/connector/exchange/bitfinex/test_bitfinex_in_flight_order.py::BitfinexInFlightOrderTests::test_update_with_full_fill_trade_event",
  "test/hummingbot/connector/exchange/bitfinex/test_bitfinex_in_flight_order.py::BitfinexInFlightOrderTests::test_update_with_partial_trade_event",
  "test/hummingbot/connector/exchange/bitfinex/test_bitfinex_in_flight_order.py::BitfinexInFlightOrderTests::test_update_with_repeated_trade_id_is_ignored",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_compressed_messages_are_correctly_read",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_logs_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_raises_cancelled_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_trades",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_listen_for_trades_raises_cancelled_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_order_book_data_source.py::BitmartAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_does_not_queue_invalid_payload",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_logs_details_for_invalid_event_message",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_logs_details_for_order_event_with_errors",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_logs_error_when_login_fails",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_processes_compressed_order_event",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_processes_order_event",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listen_for_user_stream_subscribes_to_orders_events",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listening_process_canceled_when_cancel_exception_during_authentication",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listening_process_canceled_when_cancel_exception_during_initialization",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_listening_process_logs_exception_during_events_subscription",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_api_user_stream_data_source.py::BitmartAPIUserStreamDataSourceTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_time_synchronizer_related_request_error_detection",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/bitmart/test_bitmart_exchange.py::BitmartExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_convert_from_exchange_trading_pair_not_found",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_convert_from_exchange_trading_pair_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_convert_to_exchange_trading_pair_not_found",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_convert_to_exchange_trading_pair_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_get_new_order_book",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_get_snapshot_exception_raised",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_get_snapshot_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_get_throttler_instance",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_init_trading_pair_symbols_failure",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_init_trading_pair_symbols_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled_error_raised",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_logs_exception_error_with_response",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_cancelled_when_connecting",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_trading_pair_symbol_map_dictionary_initialized",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_api_order_book_data_source.py::BitmexAPIOrderBookDataSourceUnitTests::test_trading_pair_symbol_map_dictionary_not_initialized",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py::BitmexAuthUnitTests::test_generate_signature_from_payload",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py::BitmexAuthUnitTests::test_generate_ws_signature",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py::BitmexAuthUnitTests::test_rest_authenticate_data_provided",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py::BitmexAuthUnitTests::test_rest_authenticate_no_parameters_provided",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py::BitmexAuthUnitTests::test_rest_authenticate_parameters_provided",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_adjust_quote_based_amounts",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_buy_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_cancel_all_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_cancel_unknown_new_order",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_cancel_unknown_old_order",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_client_order_id_on_order",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_create_order_exception",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_create_order_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_format_trading_rules",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_order_event_with_cancelled_status_marks_order_as_cancelled",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_sell_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_update_balances",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_update_order_status_failure_old_order",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_update_order_status_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_update_trading_rules",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_exchange.py::BitmexExchangeUnitTest::test_user_stream_event_listener_raises_cancelled_error",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_book_tracker.py::BitmexOrderBookTrackerUnitTests::test_exchange_name",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_book_tracker.py::BitmexOrderBookTrackerUnitTests::test_order_book_diff_router_snapshot_uid_above_diff_message_update_id",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_book_tracker.py::BitmexOrderBookTrackerUnitTests::test_order_book_diff_router_snapshot_uid_below_diff_message_update_id",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_book_tracker.py::BitmexOrderBookTrackerUnitTests::test_order_book_diff_router_trading_pair_not_found_append_to_saved_message_queue",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_book_tracker.py::BitmexOrderBookTrackerUnitTests::test_track_single_book_diff_message",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_book_tracker.py::BitmexOrderBookTrackerUnitTests::test_track_single_book_snapshot_message_no_past_diffs",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_book_tracker.py::BitmexOrderBookTrackerUnitTests::test_track_single_book_snapshot_message_with_past_diffs",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_status.py::BitmexOrderStatusUnitTests::test_ge",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_status.py::BitmexOrderStatusUnitTests::test_gt",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_status.py::BitmexOrderStatusUnitTests::test_le",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_order_status.py::BitmexOrderStatusUnitTests::test_lt",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_user_stream_data_source.py::BitmexUserStreamDataSourceUnitTests::test_create_websocket_connection_log_exception",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_user_stream_data_source.py::BitmexUserStreamDataSourceUnitTests::test_last_recv_time",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_user_stream_data_source.py::BitmexUserStreamDataSourceUnitTests::test_listen_for_user_stream_create_websocket_connection_failed",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_user_stream_data_source.py::BitmexUserStreamDataSourceUnitTests::test_listen_for_user_stream_does_not_queue_empty_payload",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_user_stream_data_source.py::BitmexUserStreamDataSourceUnitTests::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_user_stream_data_source.py::BitmexUserStreamDataSourceUnitTests::test_listen_for_user_stream_successful",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_utils.py::BitmexUtilsUnitTests::test_get_trading_pair_index_and_tick_size",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_utils.py::BitmexUtilsUnitTests::test_get_trading_pair_multipliers",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_web_utils.py::BitmexWebUtilsUnitTests::test_bitmex_perpetual_rest_pre_processor_non_post_request",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_web_utils.py::BitmexWebUtilsUnitTests::test_bitmex_perpetual_rest_pre_processor_post_request",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_web_utils.py::BitmexWebUtilsUnitTests::test_build_api_factory",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_web_utils.py::BitmexWebUtilsUnitTests::test_rest_url_main_domain",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_web_utils.py::BitmexWebUtilsUnitTests::test_rest_url_testnet_domain",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_web_utils.py::BitmexWebUtilsUnitTests::test_wss_url_main_domain",
  "test/hummingbot/connector/exchange/bitmex/test_bitmex_web_utils.py::BitmexWebUtilsUnitTests::test_wss_url_testnet_domain",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_api_user_stream_data_source.py::BittrexAPIUserStreamDataSourceTest::test_listen_for_user_stream_re_authenticates",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_api_user_stream_data_source.py::BittrexAPIUserStreamDataSourceTest::test_transform_raw_execution_message",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_exchange.py::BittrexExchangeTest::test_execute_cancel",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_exchange.py::BittrexExchangeTest::test_execute_cancel_already_filled",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_exchange.py::BittrexExchangeTest::test_order_fill_event_processed_before_order_complete_event",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_exchange.py::BittrexExchangeTest::test_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_in_flight_order.py::BittrexInFlightOrderTests::test_creation_from_json",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_in_flight_order.py::BittrexInFlightOrderTests::test_update_with_full_fill_trade_event",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_in_flight_order.py::BittrexInFlightOrderTests::test_update_with_partial_trade_event",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_in_flight_order.py::BittrexInFlightOrderTests::test_update_with_repeated_trade_id_is_ignored",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_order_book_data_source.py::BittrexOrderBookDataSourceTest::test_listen_for_order_book_diffs",
  "test/hummingbot/connector/exchange/bittrex/test_bittrex_order_book_data_source.py::BittrexOrderBookDataSourceTest::test_listen_for_trades",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_channel_originating_message_returns_correct",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_get_snapshot",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_order_book_snapshots_successful_rest",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_order_book_snapshots_successful_ws",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_order_book_snapshot",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_order_book_snapshot_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_order_book_data_source.py::BtcMarketsAPIOrderBookDataSourceTest::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_subscriptions_subscribes_to_order_change_fund_change",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_user_stream_does_not_queue_heartbeat_payload",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_user_stream_does_not_queue_invalid_payload",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_user_stream_logs_details_for_order_event_with_errors",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_user_stream_logs_error_when_login_fails",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_user_stream_processes_order_event",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listen_for_user_stream_subscribe_events",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listening_process_canceled_when_cancel_exception_during_authentication",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_listening_process_canceled_when_cancel_exception_during_initialization",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py::BtcMarketsAPIUserStreamDataSourceTest::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py::BtcMarketsAuthTest::test_add_auth_params_to_get_request_with_params",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py::BtcMarketsAuthTest::test_add_auth_params_to_get_request_without_params",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py::BtcMarketsAuthTest::test_add_auth_params_to_post_request",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py::BtcMarketsAuthTest::test_generate_auth_dict_ws",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py::BtcMarketsAuthTest::test_generate_auth_headers",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py::BtcMarketsAuthTest::test_get_referral_code_headers",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py::BtcMarketsAuthTest::test_no_auth_added_to_wsrequest",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_check_network_failure",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_check_network_success",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_create_order_fill_updates",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_create_order_update",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_format_trading_rules",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_format_trading_rules_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_get_fee",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_get_fee_returns_fee_from_exchange_if_available_and_default_if_not",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_get_last_traded_price",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_initial_status_dict",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_is_request_exception_related_to_time_synchronizer",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_place_cancel",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_place_order",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_request_order_fills",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_supported_order_types",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_time_synchronizer_related_request_error_detection",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_balances",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_trading_rules",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_exchange.py::BtcMarketsExchangeTest::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_order_book.py::TestOrderbook::test_buy_trade_message_from_exchange",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_order_book.py::TestOrderbook::test_diff_message_from_exchange",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_order_book.py::TestOrderbook::test_sell_trade_message_from_exchange",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_order_book.py::TestOrderbook::test_snapshot_message_from_exchange_rest",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_order_book.py::TestOrderbook::test_snapshot_message_from_exchange_websocket",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_utils.py::UtilsTest::test_is_exchange_information_valid",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_web_utils.py::WebUtilsTest::test_get_path_from_url",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_web_utils.py::WebUtilsTest::test_private_rest_url",
  "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_web_utils.py::WebUtilsTest::test_public_rest_url",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_get_new_order_book",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_get_snapshot_raises",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_order_book_snapshots_successful_rest",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_order_book_snapshots_successful_ws",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_subscriptions_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_subscriptions_subscribes_to_trades_and_depth",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_order_book_data_source.py::TestBybitAPIOrderBookDataSource::test_request_order_book_snapshot",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py::TestBybitAPIUserStreamDataSource::test_last_recv_time",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py::TestBybitAPIUserStreamDataSource::test_listen_for_user_stream_auth",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py::TestBybitAPIUserStreamDataSource::test_listen_for_user_stream_auth_failed_throws_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py::TestBybitAPIUserStreamDataSource::test_listen_for_user_stream_does_not_queue_pong_payload",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py::TestBybitAPIUserStreamDataSource::test_listen_for_user_stream_does_not_queue_ticket_info",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py::TestBybitAPIUserStreamDataSource::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py::TestBybitAPIUserStreamDataSource::test_listen_for_user_stream_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/exchange/bybit/test_bybit_auth.py::BybitAuthTests::test_add_auth_params_to_get_request_with_params",
  "test/hummingbot/connector/exchange/bybit/test_bybit_auth.py::BybitAuthTests::test_add_auth_params_to_get_request_without_params",
  "test/hummingbot/connector/exchange/bybit/test_bybit_auth.py::BybitAuthTests::test_add_auth_params_to_post_request",
  "test/hummingbot/connector/exchange/bybit/test_bybit_auth.py::BybitAuthTests::test_no_auth_added_to_wsrequest",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_check_network_failure",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_check_network_success",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_client_order_id_on_order",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_create_limit_maker_order_successfully",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_create_limit_order_successfully",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_create_market_order_successfully",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_get_fee_returns_fee_from_exchange_if_available_and_default_if_not",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_initial_status_dict",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_supported_order_types",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_balances",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_order_status_when_cancelled",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_time_synchronizer_failure_is_logged",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_time_synchronizer_raises_cancelled_error",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_time_synchronizer_successfully",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_trading_rules",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_user_stream_update_for_cancelled_order",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_user_stream_update_for_new_order_does_not_update_status",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_user_stream_update_for_order_fill",
  "test/hummingbot/connector/exchange/bybit/test_bybit_exchange.py::TestBybitExchange::test_user_stream_update_for_order_partial_fill",
  "test/hummingbot/connector/exchange/bybit/test_bybit_web_utils.py::WebUtilsTests::test_rest_url",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_pong_message_sent_when_ping_received",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_snapshot_event_correctly_queued",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/ciex/test_ciex_api_order_book_data_source.py::CiexAPIOrderBookDataSourceUnitTests::test_trade_event_correctly_queued",
  "test/hummingbot/connector/exchange/ciex/test_ciex_auth.py::CiexAuthTests::test_add_auth_headers_to_get_request_with_params",
  "test/hummingbot/connector/exchange/ciex/test_ciex_auth.py::CiexAuthTests::test_add_auth_headers_to_get_request_without_params",
  "test/hummingbot/connector/exchange/ciex/test_ciex_auth.py::CiexAuthTests::test_add_auth_headers_to_post_request",
  "test/hummingbot/connector/exchange/ciex/test_ciex_auth.py::CiexAuthTests::test_no_auth_added_to_wsrequest",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_create_order_fails_with_exchange_code_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_time_synchronizer_related_request_error_detection",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_time_synchronizer_related_response_error_detection",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/ciex/test_ciex_exchange.py::CiexExchangeTests::test_user_stream_update_for_partially_cancelled_order",
  "test/hummingbot/connector/exchange/ciex/test_ciex_web_utils.py::CiexWebUtilsTests::test_get_current_server_time",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_fetch_trading_pairs",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_get_new_order_book",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_get_snapshot",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_get_snapshot_raises_on_status_code",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_get_tracking_pairs",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_get_tracking_pairs_logs_io_error",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_get_tracking_pairs_logs_other_exceptions",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_ignores_irrelevant_messages",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_processes_change_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_processes_done_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_processes_match_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_processes_open_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_raises_on_error_msg",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_raises_on_no_type",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_order_book_data_source.py::CoinbaseProAPIOrderBookDataSourceTests::test_listen_for_order_book_diffs_raises_on_unrecognized_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_user_stream_data_source.py::TestCoinbaseProAPIUserStreamDataSource::test_listen_for_user_stream_ignores_irrelevant_messages",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_user_stream_data_source.py::TestCoinbaseProAPIUserStreamDataSource::test_listen_for_user_stream_processes_change_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_user_stream_data_source.py::TestCoinbaseProAPIUserStreamDataSource::test_listen_for_user_stream_processes_done_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_user_stream_data_source.py::TestCoinbaseProAPIUserStreamDataSource::test_listen_for_user_stream_processes_match_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_user_stream_data_source.py::TestCoinbaseProAPIUserStreamDataSource::test_listen_for_user_stream_processes_open_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_user_stream_data_source.py::TestCoinbaseProAPIUserStreamDataSource::test_listen_for_user_stream_raises_on_error_message",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_api_user_stream_data_source.py::TestCoinbaseProAPIUserStreamDataSource::test_listen_for_user_stream_raises_on_no_type",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_check_network",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_check_network_not_connected",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_execute_buy",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_execute_buy_handles_errors",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_execute_cancel",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_execute_cancel_order_does_not_exist",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_execute_sell",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_execute_sell_handles_errors",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_get_order",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_update_balances",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_update_fee_percentage",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_exchange.py::TestCoinbaseProExchange::test_update_trading_rules",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_in_flight_order.py::CoinbaseProInFlightOrderTests::test_update_with_full_fill_trade_event",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_in_flight_order.py::CoinbaseProInFlightOrderTests::test_update_with_partial_trade_event",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coinbase_pro_in_flight_order.py::CoinbaseProInFlightOrderTests::test_update_with_repeated_trade_id_is_ignored",
  "test/hummingbot/connector/exchange/coinbase_pro/test_coingbase_pro_exchange.py::BitfinexExchangeTests::test_order_fill_event_takes_fee_from_update_event",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_create_websocket_connection_logs_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_create_websocket_connection_raised_cancelled",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_fetch_trading_pairs",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_get_new_order_book",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_get_order_book_data",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_get_throttler_instance",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diff_logs_exception_parsing_message",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diff_raises_cancel_exceptions",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diff_successful",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_subscription_logs_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_enqueues_diff_and_trade_messages",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_exception_raised_cancelled_when_connecting",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_exception_raised_cancelled_when_listening",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_exception_raised_cancelled_when_subscribing",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception_parsing_message",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_trades_raises_cancel_exceptions",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_api_order_book_data_source.py::CryptoComAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_in_flight_order.py::CryptoComInnFlightOrderTests::test_deserialize_order_from_json",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_in_flight_order.py::CryptoComInnFlightOrderTests::test_serialize_order_to_json",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_user_stream_data_source.py::CryptoComAPIUserStreamDataSourceUnitTests::test_create_websocket_connection_logs_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_user_stream_data_source.py::CryptoComAPIUserStreamDataSourceUnitTests::test_create_websocket_connection_raised_cancelled",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_user_stream_data_source.py::CryptoComAPIUserStreamDataSourceUnitTests::test_get_shared_client_not_shared_client_provided",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_user_stream_data_source.py::CryptoComAPIUserStreamDataSourceUnitTests::test_get_shared_client_shared_client_provided",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_user_stream_data_source.py::CryptoComAPIUserStreamDataSourceUnitTests::test_listen_for_user_stream_raises_cancelled_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_user_stream_data_source.py::CryptoComAPIUserStreamDataSourceUnitTests::test_listen_for_user_stream_raises_logs_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_user_stream_data_source.py::CryptoComAPIUserStreamDataSourceUnitTests::test_listen_for_user_stream_successful",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_connect_authenticate_is_called",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_connect_raises_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_disconnect",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_iter_messages_handle_ping",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_subscribe_to_order_book_streams_logs_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_subscribe_to_order_book_streams_raises_cancelled_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_subscribe_to_user_streams_logs_exception",
  "test/hummingbot/connector/exchange/crypto_com/test_crypto_com_websocket.py::CryptoComWebSocketUnitTests::test_subscribe_to_user_streams_raises_cancelled_exception",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_get_new_order_book",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_get_order_book_data",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_get_order_book_data_raises",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_order_book_diffs_snapshot",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_order_book_diffs_snapshot_skips_subscribe_unsubscribe_messages",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_order_book_diffs_update",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_order_book_diffs_update_logs_error_when_exception_happens",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_order_book_snapshots",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_order_book_snapshots_logs_error_when_exception_happens",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_subscriptions_logs_error_when_exception_happens",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_trades",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_trades_logs_error_when_exception_happens",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_order_book_data_source.py::TestGateIoAPIOrderBookDataSource::test_listen_for_trades_skips_subscribe_unsubscribe_messages",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_user_stream_data_source.py::TestGateIoAPIUserStreamDataSource::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_user_stream_data_source.py::TestGateIoAPIUserStreamDataSource::test_listen_for_user_stream_does_not_queue_pong_payload",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_user_stream_data_source.py::TestGateIoAPIUserStreamDataSource::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_user_stream_data_source.py::TestGateIoAPIUserStreamDataSource::test_listen_for_user_stream_skips_subscribe_unsubscribe_messages",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_api_user_stream_data_source.py::TestGateIoAPIUserStreamDataSource::test_listen_for_user_stream_subscribes_to_orders_and_balances_events",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_cancel_order_without_exchange_order_id_marks_order_as_fail_after_retries",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_check_network",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_check_network_not_connected",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_client_order_id_on_order",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_create_order",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_create_order_fails",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_create_order_request_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_create_order_when_order_is_instantly_closed",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_execute_cancel",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_initial_status_dict",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_order_with_less_amount_than_allowed_is_not_created",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_balances",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_order_status_marks_order_with_no_exchange_id_as_not_found",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_order_status_processes_trade_fill",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_order_status_registers_order_not_found",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_trading_rules_ignores_invalid",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_update_trading_rules_polling_loop",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_user_stream_update_for_cancelled_order",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_user_stream_update_for_new_order_does_not_update_status",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_user_stream_update_for_order_fill",
  "test/hummingbot/connector/exchange/gate_io/test_gate_io_exchange.py::TestGateIoExchange::test_user_stream_update_for_order_partial_fill",
  "test/hummingbot/connector/exchange/hitbtc/test_hitbtc_api_order_book_data_source.py::HitbtcAPIOrderBookDataSourceTests::test_exchange_symbol_associated_to_pair",
  "test/hummingbot/connector/exchange/hitbtc/test_hitbtc_api_order_book_data_source.py::HitbtcAPIOrderBookDataSourceTests::test_exchange_symbol_associated_to_pair_raises_error_when_pair_not_found",
  "test/hummingbot/connector/exchange/hitbtc/test_hitbtc_api_order_book_data_source.py::HitbtcAPIOrderBookDataSourceTests::test_fetch_trading_pairs",
  "test/hummingbot/connector/exchange/hitbtc/test_hitbtc_api_order_book_data_source.py::HitbtcAPIOrderBookDataSourceTests::test_trading_pair_associated_to_exchange_symbol",
  "test/hummingbot/connector/exchange/hitbtc/test_hitbtc_api_order_book_data_source.py::HitbtcAPIOrderBookDataSourceTests::test_trading_pairs_initialization",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_logs_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_successful_subbed",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_successfully_append_trade_and_orderbook_messages",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_when_subscribing_raised_cancelled",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_order_book_data_source.py::HuobiAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_authenticate_client_failed",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_authenticate_client_logs_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_authenticate_client_raises_cancelled",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_authenticate_client_successful",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_listen_for_user_stream_enqueues_updates",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_listen_for_user_stream_handle_ping",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_listen_for_user_stream_logs_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_listen_for_user_stream_raises_cancelled_error",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_subscribe_channels_raises_cancelled",
  "test/hummingbot/connector/exchange/huobi/test_huobi_api_user_stream_data_source.py::HuobiAPIUserStreamDataSourceTests::test_subscribe_channels_successful",
  "test/hummingbot/connector/exchange/huobi/test_huobi_auth.py::HuobiAuthTests::test_rest_authenticate",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_create_order_fails_if_response_does_not_include_exchange_order_id",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_time_synchronizer_failure_is_logged",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_time_synchronizer_raises_cancelled_error",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_time_synchronizer_successfully",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/huobi/test_huobi_exchange.py::HuobiExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/huobi/test_huobi_utility_functions.py::HuobiUtilsTestCases::test_is_exchange_information_valid",
  "test/hummingbot/connector/exchange/huobi/test_huobi_utility_functions.py::HuobiUtilsTestCases::test_private_rest_url",
  "test/hummingbot/connector/exchange/huobi/test_huobi_utility_functions.py::HuobiUtilsTestCases::test_public_rest_url",
  "test/hummingbot/connector/exchange/huobi/test_huobi_ws_post_processor.py::HuobiWSPostProcessorTest::test_post_process",
  "test/hummingbot/connector/exchange/kraken/test_kraken_api_order_book_data_source.py::KrakenAPIOrderBookDataSourceTest::test_fetch_trading_pairs",
  "test/hummingbot/connector/exchange/kraken/test_kraken_api_order_book_data_source.py::KrakenAPIOrderBookDataSourceTest::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/kraken/test_kraken_api_order_book_data_source.py::KrakenAPIOrderBookDataSourceTest::test_get_new_order_book",
  "test/hummingbot/connector/exchange/kraken/test_kraken_api_order_book_data_source.py::KrakenAPIOrderBookDataSourceTest::test_listen_for_trades",
  "test/hummingbot/connector/exchange/kraken/test_kraken_api_user_stream_data_source.py::KrakenAPIUserStreamDataSourceTest::test_get_auth_token",
  "test/hummingbot/connector/exchange/kraken/test_kraken_api_user_stream_data_source.py::KrakenAPIUserStreamDataSourceTest::test_listen_for_user_stream",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_check_network_not_connected_for_error_status",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_check_network_raises_cancelled_error",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_check_network_success",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_execute_buy",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_execute_cancel",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_execute_cancel_ignores_local_orders",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_execute_sell",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_get_asset_pairs",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_get_open_orders_with_userref",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_get_order",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_update_balances",
  "test/hummingbot/connector/exchange/kraken/test_kraken_exchange.py::KrakenExchangeTest::test_update_order_status_order_closed",
  "test/hummingbot/connector/exchange/kraken/test_kraken_in_flight_order.py::KrakenInFlightOrderTests::test_deserialize_order_from_json",
  "test/hummingbot/connector/exchange/kraken/test_kraken_in_flight_order.py::KrakenInFlightOrderTests::test_order_is_local_after_creation",
  "test/hummingbot/connector/exchange/kraken/test_kraken_in_flight_order.py::KrakenInFlightOrderTests::test_serialize_order_to_json",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_get_new_order_book",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_order_book_snapshots_successful",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_subscriptions_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_order_book_data_source.py::TestKucoinAPIOrderBookDataSource::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_user_stream_data_source.py::TestKucoinAPIUserStreamDataSource::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_user_stream_data_source.py::TestKucoinAPIUserStreamDataSource::test_listen_for_user_stream_does_not_queue_pong_payload",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_user_stream_data_source.py::TestKucoinAPIUserStreamDataSource::test_listen_for_user_stream_get_listen_key_successful_with_user_update_event",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_user_stream_data_source.py::TestKucoinAPIUserStreamDataSource::test_listen_for_user_stream_iter_message_throws_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_user_stream_data_source.py::TestKucoinAPIUserStreamDataSource::test_listen_for_user_stream_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_api_user_stream_data_source.py::TestKucoinAPIUserStreamDataSource::test_listen_for_user_stream_subscribes_to_orders_and_balances_events",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_auth.py::KucoinAuthTests::test_add_auth_headers_to_get_request_with_params",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_auth.py::KucoinAuthTests::test_add_auth_headers_to_get_request_without_params",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_auth.py::KucoinAuthTests::test_add_auth_headers_to_post_request",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_auth.py::KucoinAuthTests::test_no_auth_added_to_wsrequest",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test__all_trades_updates_empty_orders",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test__all_trades_updates_last_fill",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test__update_orders_fills_calls_on_orders",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test__update_orders_fills_empty_orders",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test__update_orders_fills_handles_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test__update_orders_fills_raises_asyncio",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_cancel_order_without_exchange_order_id_marks_order_as_fail_after_retries",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_client_order_id_on_order",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_create_limit_maker_order_successfully",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_create_limit_order_successfully",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_create_market_order_successfully",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_fee_request_for_multiple_pairs",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_get_fee_returns_fee_from_exchange_if_available_and_default_if_not",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_marks_order_with_no_exchange_id_as_not_found",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_marks_order_with_no_exchange_id_as_not_found_using_fills",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_cancelled",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_cancelled_using_fills",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_filled_using_fills",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_order_has_not_changed_using_fills",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found_using_fills",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_time_synchronizer_failure_is_logged",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_time_synchronizer_raises_cancelled_error",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_time_synchronizer_successfully",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_user_stream_update_for_cancelled_order",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_user_stream_update_for_new_order_does_not_update_status",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_user_stream_update_for_order_fill",
  "test/hummingbot/connector/exchange/kucoin/test_kucoin_exchange.py::KucoinExchangeTests::test_user_stream_update_for_order_partial_fill",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_http_snapshots_successful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshot_events_cancelled",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshot_events_logs_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshot_events_successful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_error_when_ping_message_processing_fails",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_sends_ping_request",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_sends_pong_message_when_ping_received",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_messages_from_known_channels_are_added_to_the_correct_queues",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_ping_message_processing_logs_error",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_ping_message_processing_raises_cancelled_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_api_order_data_source.py::LbankAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/lbank/test_lbank_auth.py::LbankAuthTests::test_hmac_authentication",
  "test/hummingbot/connector/exchange/lbank/test_lbank_auth.py::LbankAuthTests::test_rsa_authentication",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/lbank/test_lbank_exchange.py::LbankExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_extend_listening_key_logs_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_extend_listening_key_raises_cancel",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_extend_listening_key_successful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_get_listening_key_raises_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_get_listening_key_successful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_get_listening_key_unsuccessful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_handles_ping_message_logs_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_handles_ping_message_raises_cancel",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_listen_for_user_stream_queues_account_events",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_listen_for_user_stream_sends_ping_request",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_listen_for_user_stream_subscribes_to_orders_and_balances_events",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_manage_listening_key_ping_successful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_manage_listening_key_ping_unsuccessful",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_manage_listening_key_task_loop_logs_exception",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_manage_listening_key_task_loop_raises_cancel",
  "test/hummingbot/connector/exchange/lbank/test_lbank_user_stream_data_source.py::LbankUserStreamDataSourceUnitTests::test_manage_listening_key_task_loop_sets_initialized_event",
  "test/hummingbot/connector/exchange/lbank/test_lbank_utils.py::LbankUtilsTest::test_lbank_config_map_configuration",
  "test/hummingbot/connector/exchange/lbank/test_lbank_utils.py::LbankUtilsTest::test_lbank_config_map_incremental_configuration",
  "test/hummingbot/connector/exchange/lbank/test_lbank_utils.py::LbankUtilsTest::test_post_validation_does_not_fail_with_valid_RSA_key",
  "test/hummingbot/connector/exchange/lbank/test_lbank_utils.py::LbankUtilsTest::test_post_validation_fails_with_invalid_RSA_key",
  "test/hummingbot/connector/exchange/lbank/test_lbank_utils.py::LbankUtilsTest::test_validate_auth_method",
  "test/hummingbot/connector/exchange/loopring/test_loopring_in_flight_order.py::LoopringInFlightOrderTests::test_deserialize_order_from_json",
  "test/hummingbot/connector/exchange/loopring/test_loopring_in_flight_order.py::LoopringInFlightOrderTests::test_serialize_order_to_json",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_fetch_trading_pairs_with_error_status_in_response",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_get_new_order_book",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_get_order_book_data",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_get_order_book_data_raises_exception_when_response_has_error_code",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled_when_listening",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_listen_for_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_listen_for_snapshots_successful",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_cancelled_when_subscribing",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_websocket_connection_creation_raises_cancel_exception",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_order_book_data_source.py::MexcAPIOrderBookDataSourceUnitTests::test_websocket_connection_creation_raises_exception_after_loging",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_user_stream_data_source.py::MexcAPIUserStreamDataSourceTests::test_listening_process_authenticates_and_subscribes_to_events",
  "test/hummingbot/connector/exchange/mexc/test_mexc_api_user_stream_data_source.py::MexcAPIUserStreamDataSourceTests::test_listening_process_canceled_when_cancel_exception_during_initialization",
  "test/hummingbot/connector/exchange/mexc/test_mexc_auth.py::TestAuth::test_auth_without_params",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_buy",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_cancel",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_check_network_fails_when_ping_does_not_reply_pong",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_check_network_fails_when_ping_returns_error_code",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_check_network_succeeds_when_ping_replies_pong",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_create_limit_order",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_create_market_order",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_detect_created_order_server_acknowledgement",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_exchange_logs_unknown_event_message",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_execute_cancel_all_success",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_execute_cancel_cancels",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_execute_cancel_fail",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_execute_cancel_success",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_format_trading_rules_failure",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_format_trading_rules_success",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_get_order_book_for_invalid_trading_pair_raises_error",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_get_order_book_for_valid_trading_pair",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_limit_orders",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_order_event_with_cancel_status_cancels_in_flight_order",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_order_event_with_rejected_status_makes_in_flight_order_fail",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_ready_trading_not_required_not_ready",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_ready_trading_not_required_ready",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_ready_trading_required_all_ready",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_ready_trading_required_not_ready",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_restore_tracking_states",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_sell",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_status_polling_loop",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_status_polling_loop_cancels",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_status_polling_loop_exception_raised",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_tick_initial_tick_successful",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_tick_subsequent_tick_exceed_short_poll_interval",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_tick_subsequent_tick_within_short_poll_interval",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_tracking_states_order_done",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_tracking_states_order_not_done",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_trade_event_fills_and_completes_buy_in_flight_order",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_trading_rules_polling_loop",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_trading_rules_polling_loop_cancels",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_trading_rules_polling_loop_exception_raised",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_update_order_status",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_update_order_status_error_response",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_user_event_queue_error_is_logged",
  "test/hummingbot/connector/exchange/mexc/test_mexc_exchange.py::MexcExchangeTests::test_user_event_queue_notifies_cancellations",
  "test/hummingbot/connector/exchange/mexc/test_mexc_in_flight_order.py::MexcInFlightOrderTests::test_create_from_json",
  "test/hummingbot/connector/exchange/mexc/test_mexc_in_flight_order.py::MexcInFlightOrderTests::test_instance_creation",
  "test/hummingbot/connector/exchange/mexc/test_mexc_in_flight_order.py::MexcInFlightOrderTests::test_is_cancelled",
  "test/hummingbot/connector/exchange/mexc/test_mexc_in_flight_order.py::MexcInFlightOrderTests::test_is_done",
  "test/hummingbot/connector/exchange/mexc/test_mexc_in_flight_order.py::MexcInFlightOrderTests::test_is_failure",
  "test/hummingbot/connector/exchange/mexc/test_mexc_in_flight_order.py::MexcInFlightOrderTests::test_mark_as_filled",
  "test/hummingbot/connector/exchange/mexc/test_mexc_in_flight_order.py::MexcInFlightOrderTests::test_to_json",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_message.py::MexcOrderBookMessageTests::test_delete_buy_order_book_entry_always_has_zero_amount",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_message.py::MexcOrderBookMessageTests::test_delete_sell_order_book_entry_always_has_zero_amount",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_message.py::MexcOrderBookMessageTests::test_equal_messages_have_equal_hash",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_message.py::MexcOrderBookMessageTests::test_equality_based_on_type_and_timestamp",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_tracker.py::MexcOrderBookTrackerUnitTest::test_can_get_price_after_order_book_init",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_tracker.py::MexcOrderBookTrackerUnitTest::test_exchange_name",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_tracker.py::MexcOrderBookTrackerUnitTest::test_init_order_books",
  "test/hummingbot/connector/exchange/mexc/test_mexc_order_book_tracker.py::MexcOrderBookTrackerUnitTest::test_track_single_book_apply_snapshot",
  "test/hummingbot/connector/exchange/mexc/test_mexc_user_stream_tracker.py::MexcUserStreamTrackerTests::test_listening_process_authenticates_and_subscribes_to_events",
  "test/hummingbot/connector/exchange/mexc/test_mexc_websocket_adaptor.py::MexcWebSocketUnitTests::test_connect_raises_exception",
  "test/hummingbot/connector/exchange/mexc/test_mexc_websocket_adaptor.py::MexcWebSocketUnitTests::test_disconnect",
  "test/hummingbot/connector/exchange/mexc/test_mexc_websocket_adaptor.py::MexcWebSocketUnitTests::test_subscribe_to_order_book_streams_logs_exception",
  "test/hummingbot/connector/exchange/mexc/test_mexc_websocket_adaptor.py::MexcWebSocketUnitTests::test_subscribe_to_order_book_streams_raises_cancelled_exception",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_fetch_trading_pairs",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_fetch_trading_pairs_with_error_status_in_response",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_get_instrument_ids",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_get_new_order_book",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_get_order_book_data",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_get_order_book_data_raises_exception_when_response_has_error_code",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_init_trading_pair_ids",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled_when_listening",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled_when_subscribing",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_listen_for_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_listen_for_snapshots_logs_exception_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_listen_for_snapshots_successful",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_websocket_connection_creation_raises_cancel_exception",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_order_book_data_source.py::NdaxAPIOrderBookDataSourceUnitTests::test_websocket_connection_creation_raises_exception_after_loging",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_authenticates_and_subscribes_to_events",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_canceled_when_cancel_exception_during_authentication",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_canceled_when_cancel_exception_during_events_subscription",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_canceled_when_cancel_exception_during_initialization",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_fails_when_authentication_fails",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_logs_exception_details_during_authentication",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_logs_exception_details_during_initialization",
  "test/hummingbot/connector/exchange/ndax/test_ndax_api_user_stream_data_source.py::NdaxAPIUserStreamDataSourceTests::test_listening_process_logs_exception_during_events_subscription",
  "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py::NdaxAuthTests::test_authentication_headers",
  "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py::NdaxAuthTests::test_no_authentication_headers",
  "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py::NdaxAuthTests::test_ws_auth_payload",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_account_position_event_updates_account_balances",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_buy",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_cancel",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_cancel_rate_limited_order",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_check_network_fails_when_ping_does_not_reply_pong",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_check_network_fails_when_ping_returns_error_code",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_check_network_succeeds_when_ping_replies_pong",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_create_limit_order",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_create_market_order",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_create_order_api_returns_error_exception_raised",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_create_order_below_min_order_size_exception_raised",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_create_order_cancels",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_detect_created_order_server_acknowledgement",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_exchange_logs_unknown_event_message",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_execute_cancel_all_success",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_execute_cancel_cancels",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_execute_cancel_exception_raised",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_execute_cancel_exception_raised_stop_tracking_order",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_execute_cancel_fail",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_execute_cancel_success",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_format_trading_rules_failure",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_format_trading_rules_success",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_get_account_id",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_get_account_id_when_account_does_not_exist",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_get_order_book_for_invalid_trading_pair_raises_error",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_get_order_book_for_valid_trading_pair",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_limit_orders",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_order_event_with_cancel_status_cancels_in_flight_order",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_order_event_with_rejected_status_makes_in_flight_order_fail",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_ready_trading_not_required_not_ready",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_ready_trading_not_required_ready",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_ready_trading_required_all_ready",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_ready_trading_required_not_ready",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_rest_api_limit_reached_error",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_restore_tracking_states",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_sell",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_start_network_warning_is_logged",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_status_polling_loop",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_status_polling_loop_cancels",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_status_polling_loop_exception_raised",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_tick_initial_tick_successful",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_tick_subsequent_tick_exceed_long_poll_interval",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_tick_subsequent_tick_exceed_short_poll_interval",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_tick_subsequent_tick_within_long_poll_interval",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_tick_subsequent_tick_within_short_poll_interval",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_tracking_states_order_done",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_tracking_states_order_not_done",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_trade_event_fills_and_completes_buy_in_flight_order",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_trade_event_fills_and_completes_sell_in_flight_order",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_trading_rules_polling_loop",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_trading_rules_polling_loop_cancels",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_trading_rules_polling_loop_exception_raised",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_update_order_status",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_update_order_status_error_response",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_update_order_status_exchange_order_id_not_found",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_user_event_queue_error_is_logged",
  "test/hummingbot/connector/exchange/ndax/test_ndax_exchange.py::NdaxExchangeTests::test_user_event_queue_notifies_cancellations",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_create_from_json",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_instance_creation",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_is_cancelled",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_is_done",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_is_failure",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_mark_as_filled",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_to_json",
  "test/hummingbot/connector/exchange/ndax/test_ndax_in_flight_order.py::NdaxInFlightOrderTests::test_update_with_trade_update",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_message.py::NdaxOrderBookMessageTests::test_delete_buy_order_book_entry_always_has_zero_amount",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_message.py::NdaxOrderBookMessageTests::test_delete_sell_order_book_entry_always_has_zero_amount",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_message.py::NdaxOrderBookMessageTests::test_equal_messages_have_equal_hash",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_message.py::NdaxOrderBookMessageTests::test_equality_based_on_type_and_timestamp",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_tracker.py::NdaxOrderBookTrackerUnitTest::test_can_get_price_after_order_book_init",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_tracker.py::NdaxOrderBookTrackerUnitTest::test_exchange_name",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_tracker.py::NdaxOrderBookTrackerUnitTest::test_init_order_books",
  "test/hummingbot/connector/exchange/ndax/test_ndax_order_book_tracker.py::NdaxOrderBookTrackerUnitTest::test_track_single_book_apply_snapshot",
  "test/hummingbot/connector/exchange/ndax/test_ndax_user_stream_tracker.py::NdaxUserStreamTrackerTests::test_listening_process_authenticates_and_subscribes_to_events",
  "test/hummingbot/connector/exchange/ndax/test_ndax_utils.py::NdaxUtilsTests::test_client_order_id_creation",
  "test/hummingbot/connector/exchange/ndax/test_ndax_utils.py::NdaxUtilsTests::test_rest_api_url",
  "test/hummingbot/connector/exchange/ndax/test_ndax_utils.py::NdaxUtilsTests::test_trading_pair_convertion",
  "test/hummingbot/connector/exchange/ndax/test_ndax_utils.py::NdaxUtilsTests::test_wss_url",
  "test/hummingbot/connector/exchange/ndax/test_ndax_websocket_adaptor.py::NdaxWebSocketAdaptorTests::test_close",
  "test/hummingbot/connector/exchange/ndax/test_ndax_websocket_adaptor.py::NdaxWebSocketAdaptorTests::test_get_endpoint_from_raw_received_message",
  "test/hummingbot/connector/exchange/ndax/test_ndax_websocket_adaptor.py::NdaxWebSocketAdaptorTests::test_get_payload_from_raw_received_message",
  "test/hummingbot/connector/exchange/ndax/test_ndax_websocket_adaptor.py::NdaxWebSocketAdaptorTests::test_receive_message",
  "test/hummingbot/connector/exchange/ndax/test_ndax_websocket_adaptor.py::NdaxWebSocketAdaptorTests::test_request_message_structure",
  "test/hummingbot/connector/exchange/ndax/test_ndax_websocket_adaptor.py::NdaxWebSocketAdaptorTests::test_sending_messages_increment_message_number",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_channel_originating_message_diff_queue",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_channel_originating_message_snapshot_queue",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_api_successful",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_cancelled_when_fetching_snapshot",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_log_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_snapshots_websocket_successful",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_api_order_book_data_source.py::OkxAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/okx/test_okx_auth.py::OkxAuthTests::test_add_auth_headers_to_get_request_without_params",
  "test/hummingbot/connector/exchange/okx/test_okx_auth.py::OkxAuthTests::test_add_auth_headers_to_post_request",
  "test/hummingbot/connector/exchange/okx/test_okx_auth.py::OkxAuthTests::test_no_auth_added_to_wsrequest",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_client_order_id_on_order",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_time_synchronizer_related_request_error_detection",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/okx/test_okx_exchange.py::OkxExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/exchange/okx/test_okx_user_stream_data_source.py::OkxUserStreamDataSourceUnitTests::test_listen_for_user_stream_authentication_failure",
  "test/hummingbot/connector/exchange/okx/test_okx_user_stream_data_source.py::OkxUserStreamDataSourceUnitTests::test_listen_for_user_stream_connection_failed",
  "test/hummingbot/connector/exchange/okx/test_okx_user_stream_data_source.py::OkxUserStreamDataSourceUnitTests::test_listen_for_user_stream_does_not_queue_empty_payload",
  "test/hummingbot/connector/exchange/okx/test_okx_user_stream_data_source.py::OkxUserStreamDataSourceUnitTests::test_listen_for_user_stream_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/exchange/okx/test_okx_user_stream_data_source.py::OkxUserStreamDataSourceUnitTests::test_listen_for_user_stream_subscribes_to_orders_and_balances_events",
  "test/hummingbot/connector/exchange/paper_trade/test_paper_trade_exchange.py::PaperTradeExchangeTests::test_create_paper_trade_market_for_connector_using_generic_tracker",
  "test/hummingbot/connector/exchange/paper_trade/test_paper_trade_exchange.py::PaperTradeExchangeTests::test_get_order_book_tracker_for_connector_using_generic_tracker",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_fetch_trading_pairs",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_get_last_traded_prices",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_get_new_order_book",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_get_order_book_data",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_generates_diff_msg",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_generates_snapshot_msg",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_listen_for_subscriptions_logs_error_on_closed",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_listen_for_subscriptions_subscribes_to_order_book_streams",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_listen_for_trades",
  "test/hummingbot/connector/exchange/probit/test_probit_api_order_book_data_source.py::ProbitAPIOrderBookDataSourceTest::test_listen_for_trades_ignores_snapshot_msg",
  "test/hummingbot/connector/exchange/probit/test_probit_api_user_stream_data_source.py::ProbitAPIUserStreamDataSourceTest::test_listen_for_user_stream",
  "test/hummingbot/connector/exchange/probit/test_probit_api_user_stream_data_source.py::ProbitAPIUserStreamDataSourceTest::test_listen_for_user_stream_attempts_again_on_exception",
  "test/hummingbot/connector/exchange/probit/test_probit_api_user_stream_data_source.py::ProbitAPIUserStreamDataSourceTest::test_listen_for_user_stream_registers_ping_msg",
  "test/hummingbot/connector/exchange/probit/test_probit_api_user_stream_data_source.py::ProbitAPIUserStreamDataSourceTest::test_listen_for_user_stream_stops_on_asyncio_cancelled_error",
  "test/hummingbot/connector/exchange/probit/test_probit_exchange.py::TestProbitExchange::test_client_order_id_on_order",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_get_new_order_book_successful",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_get_new_order_book_with_only_bids_successful",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_process_full_snapshot_correctly",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_order_book_diffs_with_only_asks_successful",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_listen_for_trades_successful",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_order_book_data_source.py::WhitebitAPIOrderBookDataSourceUnitTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_user_stream_data_source.py::WhitebitAPIUserStreamDataSourceTests::test_listen_for_user_stream_accepts_only_balance_trades_and_orders_event_messages",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_user_stream_data_source.py::WhitebitAPIUserStreamDataSourceTests::test_listen_for_user_stream_logs_error_when_auth_token_request_fails",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_user_stream_data_source.py::WhitebitAPIUserStreamDataSourceTests::test_listen_for_user_stream_logs_error_when_authentication_fails",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_user_stream_data_source.py::WhitebitAPIUserStreamDataSourceTests::test_listen_for_user_stream_subscribes_to_orders_trades_and_balances_events",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_user_stream_data_source.py::WhitebitAPIUserStreamDataSourceTests::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_api_user_stream_data_source.py::WhitebitAPIUserStreamDataSourceTests::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_auth.py::WhitebitAuthTests::test_add_auth_headers_to_get_request_with_params",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_auth.py::WhitebitAuthTests::test_add_auth_headers_to_get_request_without_params",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_auth.py::WhitebitAuthTests::test_no_auth_added_to_wsrequest",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_all_trading_pairs",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_all_trading_pairs_does_not_raise_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_cancel_lost_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_cancel_lost_order_successfully",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_cancel_order_raises_failure_event_when_request_fails",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_cancel_order_successfully",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_cancel_two_orders_with_cancel_all_and_one_fails",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_check_network_failure",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_check_network_raises_cancel_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_check_network_success",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_create_buy_limit_order_successfully",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_create_order_fails_and_raises_failure_event",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_create_order_fails_when_trading_rule_error_and_raises_failure_event",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_create_sell_limit_order_successfully",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_get_last_trade_prices",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_initial_status_dict",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_invalid_trading_pair_not_in_all_trading_pairs",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_lost_order_included_in_order_fills_update_and_not_in_order_status_update",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_lost_order_removed_after_cancel_status_user_event_received",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_lost_order_user_stream_full_fill_events_are_processed",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_order_fills_error_response_when_no_fills_is_ignored",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_restore_tracking_states_only_registers_open_orders",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_supported_order_types",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_balances",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_order_status_when_canceled",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_order_status_when_filled",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_order_status_when_filled_correctly_processed_even_when_trade_fill_update_fails",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_order_status_when_order_has_not_changed",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_order_status_when_order_has_not_changed_and_one_partial_fill",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_order_status_when_request_fails_marks_order_as_not_found",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_trading_rules",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_update_trading_rules_ignores_rule_with_error",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_user_stream_balance_update",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_user_stream_logs_errors",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_user_stream_raises_cancel_exception",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_user_stream_update_for_canceled_order",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_user_stream_update_for_new_order",
  "test/hummingbot/connector/exchange/whitebit/test_whitebit_exchange.py::WhitebitExchangeTests::test_user_stream_update_for_order_full_fill",
  "test/hummingbot/connector/gateway/amm/test_gateway_cancel.py::GatewayCancelUnitTest::test_cancel_approval",
  "test/hummingbot/connector/gateway/amm/test_gateway_cancel.py::GatewayCancelUnitTest::test_cancel_order",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_approve_token",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_buy_order",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_get_allowances",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_get_chain_info",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_get_quote_price",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_sell_order",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_update_approval_status",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_update_balances",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm.py::GatewayEVMAMMConnectorUnitTest::test_update_order_status",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_add_liquidity",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_approve_token",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_collect_fees",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_get_allowances",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_get_chain_info",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_get_price",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_remove_liquidity",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_update_approval_status",
  "test/hummingbot/connector/gateway/amm/test_gateway_evm_amm_lp.py::GatewayEVMAMMLPConnectorUnitTest::test_update_balances",
  "test/hummingbot/connector/gateway/amm/test_gateway_in_flight_order.py::GatewayInFlightOrderUnitTests::test_order_life_cycle_of_token_approval_requests",
  "test/hummingbot/connector/gateway/amm/test_gateway_in_flight_order.py::GatewayInFlightOrderUnitTests::test_order_life_cycle_of_trade_orders",
  "test/hummingbot/connector/gateway/clob/test_gateway_cancel.py::GatewayCancelUnitTest::test_cancel_order",
  "test/hummingbot/connector/gateway/clob/test_gateway_in_flight_order.py::CLOBInFlightOrderUnitTests::test_order_life_cycle_of_token_approval_requests",
  "test/hummingbot/connector/gateway/clob/test_gateway_in_flight_order.py::CLOBInFlightOrderUnitTests::test_order_life_cycle_of_trade_orders",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_get_new_order_book_raises_exception",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_get_new_order_book_success",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_cancelled",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_logs_exception",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_order_book_diffs_successful",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_subscriptions_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_subscriptions_subscribes_to_trades_and_order_diffs",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_trades_cancelled_when_listening",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_listen_for_trades_logs_exception",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_order_book_data_source.py::OMSConnectorAPIOrderBookDataSourceTest::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_user_stream_data_source.py::OMSConnectorUserStreamDataSourceTests::test_listen_for_user_stream_ignores_non_events",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_user_stream_data_source.py::OMSConnectorUserStreamDataSourceTests::test_listen_for_user_stream_sends_ping_message_before_ping_interval_finishes",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_user_stream_data_source.py::OMSConnectorUserStreamDataSourceTests::test_listen_for_user_stream_subscribes_to_orders_and_balances_events",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_auth.py::OMSConnectorAuthTest::test_build_auth_payload",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_auth.py::OMSConnectorAuthTest::test_validate_auth",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_web_utils.py::OMSConnectorWebUtilsTest::test_ws_increments_msg_counter",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_web_utils.py::OMSConnectorWebUtilsTest::test_ws_post_processor",
  "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_web_utils.py::OMSConnectorWebUtilsTest::test_ws_pre_processor",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_add_iterator",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_backtest",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_backtest_til",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_child_iterators",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_clock_mode",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_current_timestamp",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_remove_iterator",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_run",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_run_til",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_start_time",
  "test/hummingbot/core/test_clock.py::ClockUnitTest::test_tick_time",
  "test/hummingbot/core/test_events.py::OrderFilledEventTests::test_fill_events_created_from_order_book_rows_have_unique_trade_ids",
  "test/hummingbot/core/test_network_base.py::NetworkBaseTest::test_init",
  "test/hummingbot/core/test_network_base.py::NetworkBaseTest::test_network",
  "test/hummingbot/core/test_network_base.py::NetworkBaseTest::test_start_and_stop_network",
  "test/hummingbot/core/test_network_base.py::NetworkBaseTest::test_update_network_status",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_check_network_interval",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_check_network_task",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_check_network_timeout",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_last_connected_timestamp",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_network_error_wait_time",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_network_status",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_start",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_start_network",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_stop",
  "test/hummingbot/core/test_network_iterator.py::NetworkIteratorUnitTest::test_stop_network",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_add_listener_twice",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_add_listeners",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_add_listeners_to_separate_events",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_get_listeners_no_listeners",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_lapsed_listener_remove_on_get_listeners",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_lapsed_listener_remove_on_remove_listener",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_remove_listener",
  "test/hummingbot/core/test_pubsub.py::PubSubTest::test_trigger_event",
  "test/hummingbot/core/test_py_time_iterator.py::PyTimeIteratorUnitTest::test_clock",
  "test/hummingbot/core/test_py_time_iterator.py::PyTimeIteratorUnitTest::test_current_timestamp",
  "test/hummingbot/core/test_py_time_iterator.py::PyTimeIteratorUnitTest::test_start",
  "test/hummingbot/core/test_py_time_iterator.py::PyTimeIteratorUnitTest::test_stop",
  "test/hummingbot/core/test_py_time_iterator.py::PyTimeIteratorUnitTest::test_tick",
  "test/hummingbot/core/test_time_iterator.py::TimeIteratorUnitTest::test_clock",
  "test/hummingbot/core/test_time_iterator.py::TimeIteratorUnitTest::test_current_timestamp",
  "test/hummingbot/core/test_time_iterator.py::TimeIteratorUnitTest::test_start",
  "test/hummingbot/core/test_time_iterator.py::TimeIteratorUnitTest::test_stop",
  "test/hummingbot/core/test_time_iterator.py::TimeIteratorUnitTest::test_tick",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_acquire_appends_to_task_logs",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_acquire_awaits_when_exceed_capacity",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_flush_empty_task_logs",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_flush_only_elapsed_tasks_are_flushed",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_get_related_limits",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_init_with_rate_limits_share_pct",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_init_without_rate_limits_share_pct",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_for_limits_with_milliseconds_interval",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_pool_non_weighted_task_returns_false",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_pool_non_weighted_task_returns_true",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_pool_weighted_tasks",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_returns_true",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_returns_true_for_throttler_without_configured_limits",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_singular_non_weighted_task_returns_false",
  "test/hummingbot/core/api_throttler/test_async_throttler.py::AsyncThrottlerUnitTests::test_within_capacity_singular_non_weighted_task_returns_true",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_average_executed_price",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_completed_order_recovered_from_json_has_completed_event_updated",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_from_json",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_from_json_does_not_fail_when_order_fills_not_present",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_get_exchange_order_id",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_in_flight_order_states",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_to_json",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_to_limit_order",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_trade_update_does_not_change_exchange_order_id",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_update_exchange_id_with_order_update",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_update_with_order_update_client_order_id_mismatch",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_update_with_order_update_multiple_order_updates",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_update_with_order_update_open_order",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_update_with_trade_update_duplicate_trade_update",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_update_with_trade_update_multiple_trade_updates",
  "test/hummingbot/core/data_type/test_in_flight_order.py::InFlightOrderPyUnitTests::test_update_with_trade_update_trade_update_with_trade_fee_percent",
  "test/hummingbot/core/data_type/test_limit_order.py::LimitOrderUnitTest::test_order_creation_with_all_values",
  "test/hummingbot/core/data_type/test_limit_order.py::LimitOrderUnitTest::test_order_creation_with_default_values",
  "test/hummingbot/core/data_type/test_limit_order.py::LimitOrderUnitTest::test_to_pandas",
  "test/hummingbot/core/data_type/test_order_book.py::OrderBookUnitTest::test_truncate_overlap_entries_cex",
  "test/hummingbot/core/data_type/test_order_book.py::OrderBookUnitTest::test_truncate_overlap_entries_dex",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_bids_and_asks",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_equality",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_first_update_id",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_has_trade_id",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_has_update_id",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_larger_than",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_trade_id",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_trading_pair",
  "test/hummingbot/core/data_type/test_order_book_message.py::OrderBookMessageTest::test_update_id",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_added_to_cost_fee_amount_in_token_does_not_look_for_convertion_rate_when_percentage_zero",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_added_to_cost_json_deserialization",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_added_to_cost_json_serialization",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_added_to_cost_perpetual_fee_created_when_closing_position_but_schema_has_percent_fee_token",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_added_to_cost_perpetual_fee_created_when_opening_positions",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_added_to_cost_spot_fee_created_for_buy_and_fee_not_deducted_from_return",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_deducted_from_return_spot_fee_created_for_buy_and_fee_deducted_from_return",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_deducted_from_return_spot_fee_created_for_sell",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_deducted_from_returns_fee_amount_in_token_does_not_look_for_convertion_rate_when_percentage_zero",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_deducted_from_returns_json_deserialization",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_deducted_from_returns_json_serialization",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeFeeTests::test_deducted_from_returns_perpetual_fee_created_when_closing_position_and_no_percent_fee_token",
  "test/hummingbot/core/data_type/test_trade_fee.py::TokenAmountTests::test_json_deserialization",
  "test/hummingbot/core/data_type/test_trade_fee.py::TokenAmountTests::test_json_serialization",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeUpdateTests::test_json_deserialization",
  "test/hummingbot/core/data_type/test_trade_fee.py::TradeUpdateTests::test_json_serialization",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_add_wallet",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_amm_trade",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_approve_token",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_delete_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_get_filled_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_get_markets",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_get_open_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_get_order_books",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_get_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_get_root",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_get_tickers",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_post_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_clob_post_settle_funds",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_failed_get_transaction",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_allowances",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_balances",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_configuration",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_connectors",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_evm_nonce",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_gateway_status",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_network_status",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_price",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_tokens",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_get_wallets",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_ping_gateway",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_delete_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_get_filled_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_get_markets",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_get_open_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_get_order_books",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_get_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_get_root",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_get_tickers",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_post_orders",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_serum_post_settle_funds",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_solana_get_balances",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_solana_get_root",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_solana_get_token",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_solana_post_poll",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_solana_post_token",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_successful_get_transaction",
  "test/hummingbot/core/gateway/test_gateway_http_client.py::GatewayHttpClientUnitTest::test_update_configuration",
  "test/hummingbot/core/gateway/test_gateway_perp_http_endpoints.py::GatewayHttpClientUnitTest::test_gateway_list",
  "test/hummingbot/core/gateway/test_gateway_perp_http_endpoints.py::GatewayHttpClientUnitTest::test_gateway_perp_position",
  "test/hummingbot/core/gateway/test_gateway_perp_http_endpoints.py::GatewayHttpClientUnitTest::test_gateway_price",
  "test/hummingbot/core/gateway/test_gateway_perp_http_endpoints.py::GatewayHttpClientUnitTest::test_gateway_status",
  "test/hummingbot/core/gateway/test_gateway_perp_http_endpoints.py::GatewayHttpClientUnitTest::test_perp_balance",
  "test/hummingbot/core/gateway/test_gateway_perp_http_endpoints.py::GatewayHttpClientUnitTest::test_perp_close",
  "test/hummingbot/core/gateway/test_gateway_perp_http_endpoints.py::GatewayHttpClientUnitTest::test_perp_open",
  "test/hummingbot/core/gateway/test_gateway_utils.py::GatewayUtilsTest::test_unwrap_token_symbols",
  "test/hummingbot/core/mock_api/test_mock_web_server.py::MockWebServerTest::test_get_request_response",
  "test/hummingbot/core/mock_api/test_mock_web_server.py::MockWebServerTest::test_query_string",
  "test/hummingbot/core/mock_api/test_mock_web_server.py::MockWebServerTest::test_update_response",
  "test/hummingbot/core/mock_api/test_mock_web_server.py::MockWebServerTest::test_web_app_response",
  "test/hummingbot/core/mock_api/test_mock_web_socket_server.py::MockWebSocketServerFactoryTest::test_web_socket",
  "test/hummingbot/core/rate_oracle/test_rate_oracle.py::RateOracleTest::test_find_rate",
  "test/hummingbot/core/rate_oracle/test_rate_oracle.py::RateOracleTest::test_find_rate_from_source",
  "test/hummingbot/core/rate_oracle/test_rate_oracle.py::RateOracleTest::test_rate_oracle_network",
  "test/hummingbot/core/rate_oracle/test_rate_oracle.py::RateOracleTest::test_rate_oracle_single_instance_prices_reset_after_global_token_change",
  "test/hummingbot/core/rate_oracle/test_rate_oracle.py::RateOracleTest::test_rate_oracle_single_instance_rate_source_reset_after_configuration_change",
  "test/hummingbot/core/rate_oracle/sources/test_ascend_ex_rate_source.py::AscendExRateSourceTest::test_get_prices",
  "test/hummingbot/core/rate_oracle/sources/test_binance_rate_source.py::BinanceRateSourceTest::test_get_binance_prices",
  "test/hummingbot/core/rate_oracle/sources/test_coin_gecko_rate_source.py::CoinGeckoRateSourceTest::test_get_prices_no_extra_tokens",
  "test/hummingbot/core/rate_oracle/sources/test_coin_gecko_rate_source.py::CoinGeckoRateSourceTest::test_get_prices_raises_IOError_cooloff",
  "test/hummingbot/core/rate_oracle/sources/test_coin_gecko_rate_source.py::CoinGeckoRateSourceTest::test_get_prices_raises_non_IOError_no_cooloff",
  "test/hummingbot/core/rate_oracle/sources/test_coin_gecko_rate_source.py::CoinGeckoRateSourceTest::test_get_prices_with_extra_tokens",
  "test/hummingbot/core/rate_oracle/sources/test_gate_io_rate_source.py::GateIoRateSourceTest::test_get_prices",
  "test/hummingbot/core/rate_oracle/sources/test_kucoin_rate_source.py::KucoinRateSourceTest::test_get_prices",
  "test/hummingbot/core/utils/test_async_retry.py::AsyncRetryTest::test_async_retry",
  "test/hummingbot/core/utils/test_async_ttl_cache.py::AsyncTTLCacheUnitTest::test_async_ttl_cache",
  "test/hummingbot/core/utils/test_estimate_fee.py::EstimateFeeTest::test_estimate_fee",
  "test/hummingbot/core/utils/test_fixed_rate_source.py::FixedRateSourceTests::test_get_rate",
  "test/hummingbot/core/utils/test_fixed_rate_source.py::FixedRateSourceTests::test_get_rate_when_inverted_pair_is_configured",
  "test/hummingbot/core/utils/test_fixed_rate_source.py::FixedRateSourceTests::test_look_for_unconfigured_pair_rate",
  "test/hummingbot/core/utils/test_fixed_rate_source.py::FixedRateSourceTests::test_string_representation",
  "test/hummingbot/core/utils/test_gateway_config_utils.py::GatewayConfigUtilsTest::test_build_config_dict_display",
  "test/hummingbot/core/utils/test_gateway_config_utils.py::GatewayConfigUtilsTest::test_build_config_namespace_keys",
  "test/hummingbot/core/utils/test_gateway_config_utils.py::GatewayConfigUtilsTest::test_sear",
  "test/hummingbot/core/utils/test_gateway_transaction_exceptions.py::CheckTransactionExceptionsTest::test_check_transaction_exceptions",
  "test/hummingbot/core/utils/test_map_df_to_str.py::MapDfToStrTest::test_map_df_to_str",
  "test/hummingbot/core/utils/test_market_price.py::MarketPriceUnitTests::test_get_last_price",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_create_microseconds_precision_nonce_from_machine_time",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_create_microseconds_precision_nonce_from_parameter",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_create_milliseconds_precision_nonce_from_machine_time",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_create_milliseconds_precision_nonce_from_parameter",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_create_seconds_precision_nonce_from_machine_time",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_create_seconds_precision_nonce_from_parameter",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_nonce_from_machine_time_is_not_repeated",
  "test/hummingbot/core/utils/test_nonce_creator.py::NonceCreatorTests::test_nonce_from_same_base_number_is_not_repeated",
  "test/hummingbot/core/utils/test_ssl_cert.py::SslCertTest::test_create_self_sign_certs",
  "test/hummingbot/core/utils/test_ssl_cert.py::SslCertTest::test_generate_csr",
  "test/hummingbot/core/utils/test_ssl_cert.py::SslCertTest::test_generate_private_key",
  "test/hummingbot/core/utils/test_ssl_cert.py::SslCertTest::test_generate_public_key",
  "test/hummingbot/core/utils/test_ssl_cert.py::SslCertTest::test_sign_csr",
  "test/hummingbot/core/utils/test_tracking_nonce.py::TrackingNonceTest::test_get_concurrent_nonce_in_high_res",
  "test/hummingbot/core/utils/test_tracking_nonce.py::TrackingNonceTest::test_get_concurrent_nonce_in_low_res",
  "test/hummingbot/core/utils/test_tracking_nonce.py::TrackingNonceTest::test_get_low_res_tracking_nonce",
  "test/hummingbot/core/utils/test_tracking_nonce.py::TrackingNonceTest::test_get_tracking_nonce",
  "test/hummingbot/core/utils/test_trading_pair_fetcher.py::TestTradingPairFetcher::test_fetch_all",
  "test/hummingbot/core/utils/test_trading_pair_fetcher.py::TestTradingPairFetcher::test_fetched_connector_trading_pairs",
  "test/hummingbot/core/utils/test_trading_pair_fetcher.py::TestTradingPairFetcher::test_trading_pair_fetcher_returns_same_instance_when_get_new_instance_once_initialized",
  "test/hummingbot/core/web_assistant/test_rest_assistant.py::RESTAssistantTest::test_rest_assistant_authenticates",
  "test/hummingbot/core/web_assistant/test_rest_assistant.py::RESTAssistantTest::test_rest_assistant_call_with_pre_and_post_processing",
  "test/hummingbot/core/web_assistant/test_web_assistants_factory.py::WebAssistantsFactoryTest::test_get_rest_assistant",
  "test/hummingbot/core/web_assistant/test_web_assistants_factory.py::WebAssistantsFactoryTest::test_get_ws_assistant",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_connect",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_disconnect",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_iter_messages",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_receive",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_receive_plain_text",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_receive_post_processes",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_send",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_send_pre_processes",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_subscribe",
  "test/hummingbot/core/web_assistant/test_ws_assistant.py::WSAssistantTest::test_ws_assistant_authenticates",
  "test/hummingbot/core/web_assistant/connections/test_connections_factory.py::ConnectionsFactoryTest::test_get_rest_connection",
  "test/hummingbot/core/web_assistant/connections/test_connections_factory.py::ConnectionsFactoryTest::test_get_ws_connection",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::DataTypesTest::test_rest_method_to_str",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::DataTypesTest::test_rest_response_properties",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::DataTypesTest::test_rest_response_repr",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::EndpointRESTRequestTest::test_constructs_url_from_endpoint",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::EndpointRESTRequestTest::test_data_to_str",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::EndpointRESTRequestTest::test_raises_on_data_supplied_to_non_post_request",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::EndpointRESTRequestTest::test_raises_on_no_url_and_no_endpoint",
  "test/hummingbot/core/web_assistant/connections/test_data_types.py::EndpointRESTRequestTest::test_raises_on_params_supplied_to_post_request",
  "test/hummingbot/core/web_assistant/connections/test_rest_connection.py::RESTConnectionTest::test_rest_connection_call",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_attempt_to_connect_second_time_raises",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_connect_and_disconnect",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_disconnects_and_raises_on_aiohttp_close",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_disconnects_and_raises_on_aiohttp_closed",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_ignores_aiohttp_close_msg_if_disconnect_called",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_ignores_ping",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_ignores_pong",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_ping_updates_last_recv_time",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_pong_updates_last_recv_time",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_raises_on_timeout",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_sends_pong_on_ping",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_receive_when_disconnected_raises",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_send",
  "test/hummingbot/core/web_assistant/connections/test_ws_connection.py::WSConnectionTest::test_send_when_disconnected_raises",
  "test/hummingbot/data_feed/test_coin_gecko_data_feed.py::CoinGeckoDataFeedTest::test_fetch_data_logs_exceptions",
  "test/hummingbot/data_feed/test_coin_gecko_data_feed.py::CoinGeckoDataFeedTest::test_fetch_data_loop",
  "test/hummingbot/data_feed/test_coin_gecko_data_feed.py::CoinGeckoDataFeedTest::test_get_prices_by_page",
  "test/hummingbot/data_feed/test_coin_gecko_data_feed.py::CoinGeckoDataFeedTest::test_get_prices_by_token_id",
  "test/hummingbot/data_feed/test_coin_gecko_data_feed.py::CoinGeckoDataFeedTest::test_get_supported_vs_tokens",
  "test/hummingbot/data_feed/candles_feed/test_candles_factory.py::TestCandlesFactory::test_get_binance_candles_perpetuals",
  "test/hummingbot/data_feed/candles_feed/test_candles_factory.py::TestCandlesFactory::test_get_binance_candles_spot",
  "test/hummingbot/data_feed/candles_feed/test_candles_factory.py::TestCandlesFactory::test_get_non_existing_candles",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_candles_empty",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_fetch_candles",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_listen_for_subscriptions_subscribes_to_klines",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_process_websocket_messages_duplicated_candle_not_included",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_process_websocket_messages_empty_candle",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_process_websocket_messages_with_two_valid_messages",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/data_feed/candles_feed/binance_perpetuals_candles/test_binance_perpetuals_candles.py::TestBinancePerpetualCandles::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_candles_empty",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_fetch_candles",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_listen_for_subscriptions_logs_exception_details",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_listen_for_subscriptions_raises_cancel_exception",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_listen_for_subscriptions_subscribes_to_klines",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_process_websocket_messages_duplicated_candle_not_included",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_process_websocket_messages_empty_candle",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_process_websocket_messages_with_two_valid_messages",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_subscribe_channels_raises_cancel_exception",
  "test/hummingbot/data_feed/candles_feed/binance_spot_candles/test_binance_spot_candles.py::TestBinanceSpotCandles::test_subscribe_channels_raises_exception_and_logs_error",
  "test/hummingbot/logger/test_logger_util_functions.py::LoggerUtilFunctionsTest::test_log_encoder_encodes_dataclasses",
  "test/hummingbot/model/test_trade_fill.py::TradeFillTests::test_attribute_names_for_file_export",
  "test/hummingbot/model/test_trade_fill.py::TradeFillTests::test_attribute_names_for_file_export_are_valid",
  "test/hummingbot/model/db_migration/test_transformations.py::ConvertPriceAndAmountColumnsToBigintTests::test_apply_changes_trade_fill_and_order_tables",
  "test/hummingbot/model/db_migration/test_transformations.py::ConvertPriceAndAmountColumnsToBigintTests::test_name",
  "test/hummingbot/model/db_migration/test_transformations.py::ConvertPriceAndAmountColumnsToBigintTests::test_to_version",
  "test/hummingbot/notifier/test_telegram.py::TelegramNotifierTests::test_start_after_stop",
  "test/hummingbot/pmm_script/test_pmm_script_base.py::PMMScriptIteratorTests::test_avg_and_median_mid_price_chg",
  "test/hummingbot/pmm_script/test_pmm_script_base.py::PMMScriptIteratorTests::test_avg_mid_price",
  "test/hummingbot/pmm_script/test_pmm_script_base.py::PMMScriptIteratorTests::test_round_by_step",
  "test/hummingbot/pmm_script/test_pmm_script_base.py::PMMScriptIteratorTests::test_take_samples",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_balance_limit",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_balance_limit_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_balance_paper",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_balance_paper_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_command_shortcuts",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_command_shortcuts_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_config",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_config_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_config_updates_multiple_params",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_config_updates_single_param",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_history",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_history_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_import",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_import_empty_strategy",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_import_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_start",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_start_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_status",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_status_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_stop",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_command_stop_failure",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_event_buy_order_created",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_event_order_expired",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_event_sell_order_created",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_eventforwarder_invalid_events",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_eventforwarder_logger",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_eventforwarder_unknown_events",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_gateway_check_health",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_gateway_stop",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_notifier_fakes",
  "test/hummingbot/remote_iface/test_mqtt.py::RemoteIfaceMQTTTests::test_mqtt_subscribed_topics",
  "test/hummingbot/smart_components/position_executor/test_data_types.py::TestPositionExecutorDataTypes::test_position_config_model",
  "test/hummingbot/smart_components/position_executor/test_data_types.py::TestPositionExecutorDataTypes::test_position_executor_status_enum",
  "test/hummingbot/smart_components/position_executor/test_data_types.py::TestPositionExecutorDataTypes::test_tracked_order",
  "test/hummingbot/smart_components/position_executor/test_data_types.py::TestPositionExecutorDataTypes::test_tracked_order_order",
  "test/hummingbot/smart_components/position_executor/test_data_types.py::TestPositionExecutorDataTypes::test_tracked_order_order_id",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_clean_executor",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_active_position_close_by_stop_loss",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_active_position_close_by_time_limit",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_active_position_create_take_profit",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_close_placed_stop_loss_failed",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_close_placed_time_limit_failed",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_not_started_create_open_order",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_not_started_expired",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_order_placed_cancel_open_order",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_control_position_order_placed_not_cancel_open_order",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_init",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_is_closed",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_pnl",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_process_order_completed_event_open_order",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_process_order_completed_event_stop_loss_order",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_process_order_completed_event_take_profit_order",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_process_order_completed_event_time_limit_order",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_process_order_filled_event_open_order_not_started",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_process_order_filled_event_open_order_started",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_status",
  "test/hummingbot/smart_components/position_executor/test_position_executor.py::TestPositionExecutor::test_to_format_status",
  "test/hummingbot/strategy/test_conditional_execution_state.py::RunAlwaysExecutionStateTests::test_always_process_tick",
  "test/hummingbot/strategy/test_conditional_execution_state.py::RunInTimeSpanExecutionStateTests::test_process_tick_when_current_time_in_span",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_add_order_as_hanging_order",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_add_orders_from_partially_executed_pairs",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_add_remove_limit_order",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_hanging_order_removed_when_cancelled",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_limit_order_added_to_non_grouping_tracker_is_potential_hanging_order",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_non_grouped_hanging_order_and_original_order_removed_when_hanging_order_completed",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_non_grouping_tracker_cancels_order_when_removing_far_from_price",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_order_being_renewed_is_canceled_only_one_time",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_renew_hanging_orders_past_max_order_age",
  "test/hummingbot/strategy/test_hanging_orders_tracker.py::TestHangingOrdersTracker::test_tracker_initialized",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_base_balance",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_get_mid_price",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_get_price",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_get_price_by_type",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_get_price_for_volume",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_order_book",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_order_book_ask_entries",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_order_book_bid_entries",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_quote_balance",
  "test/hummingbot/strategy/test_market_trading_pair_tuple.py::MarketTradingPairTupleUnitTest::test_vwap_for_volume",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_active_asks",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_active_bids",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_active_limit_orders",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_check_and_cleanup_shadow_records",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_limit_order",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_limit_orders",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_market_order",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_market_orders",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_market_pair_from_order_id",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_shadow_limit_order",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_shadow_limit_orders",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_get_shadow_market_pair_from_order_id",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_has_in_flight_cancel",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_in_flight_cancels",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_in_flight_pending_created",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_market_pair_to_active_orders",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_shadow_limit_orders",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_tracked_limit_orders",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_tracked_limit_orders_data_frame",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_tracked_market_order_data_frame",
  "test/hummingbot/strategy/test_order_tracker.py::OrderTrackerUnitTests::test_tracked_market_orders",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_active_orders",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_cancel_buy_order",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_format_status",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_get_assets",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_get_market_trading_pair_tuples",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_load_script_class_raises_exception_for_non_existing_script",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_load_valid_script_class",
  "test/hummingbot/strategy/test_script_strategy_base.py::ScriptStrategyBaseTest::test_start",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_active_markets",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_add_markets",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_buy_with_specific_market",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_cancel_order",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_cum_flat_fees",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_notify_hb_app",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_notify_hb_app_with_timestamp",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_order_tracker",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_remove_markets",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_sell_with_specific_market",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_start_tracking_limit_order",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_start_tracking_market_order",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_stop_tracking_limit_order",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_stop_tracking_market_order",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_track_restored_order",
  "test/hummingbot/strategy/test_strategy_base.py::StrategyBaseUnitTests::test_trades",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_cancel_order",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_complete_buy_order",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_complete_funding_payment",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_complete_sell_order",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_create_buy_order",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_create_sell_order",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_expire_order",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_fail_order",
  "test/hummingbot/strategy/test_strategy_py_base.py::StrategyPyBaseUnitTests::test_did_fill_order",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_apply_cancel_interval",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_arb_buy_amm_1_sell_amm_2",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_arb_buy_amm_2_sell_amm_1",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_arb_not_profitable_from_gas_prices",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_arb_profitable_after_gas_prices",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_arbitrage_not_profitable",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_cancel_outdated_orders",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_format_status",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_insufficient_balance",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_market_ready",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_non_concurrent_orders_submission",
  "test/hummingbot/strategy/amm_arb/test_amm_arb.py::AmmArbUnitTest::test_set_order_failed",
  "test/hummingbot/strategy/amm_arb/test_amm_arb_start.py::AMMArbStartTest::test_amm_arb_strategy_creation",
  "test/hummingbot/strategy/amm_arb/test_data_types.py::ArbProposalTests::test_profit_is_zero_when_no_available_sell_to_buy_quote_rate",
  "test/hummingbot/strategy/amm_arb/test_data_types.py::ArbProposalTests::test_profit_with_network_fees",
  "test/hummingbot/strategy/amm_arb/test_data_types.py::ArbProposalTests::test_profit_without_fees_for_different_base_trading_pairs_and_different_amount_on_sides",
  "test/hummingbot/strategy/amm_arb/test_data_types.py::ArbProposalTests::test_profit_without_fees_for_different_quotes_trading_pairs",
  "test/hummingbot/strategy/amm_arb/test_data_types.py::ArbProposalTests::test_profit_without_fees_for_same_trading_pair",
  "test/hummingbot/strategy/amm_arb/test_utils.py::AmmArbUtilsUnitTest::test_create_arb_proposals",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_active_buys",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_active_orders",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_active_sells",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_adjusted_available_balance_considers_in_flight_cancel_orders",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_all_markets_ready",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_apply_add_transaction_costs",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_apply_budget_constraint",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_apply_order_amount_eta_transformation",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_apply_order_optimization",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_apply_order_price_modifiers",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_base_asset",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_calculate_reservation_price_and_optimal_spread_timeframe_constrained",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_calculate_reservation_price_and_optimal_spread_timeframe_infinite",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_calculate_target_inventory",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_cancel_active_orders",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_cancel_order",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_create_base_proposal",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_create_basic_proposal",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_create_proposal_based_on_order_levels",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_create_proposal_based_on_order_override",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_execute_orders_proposal",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_existing_hanging_orders_are_included_in_budget_constraint",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_get_adjusted_available_balance",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_get_level_spreads",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_get_mid_price",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_get_price",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_get_spread",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_get_volatility",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_is_algorithm_ready",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_is_within_tolerance",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_liquidity_estimation",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_logging_options",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_market_info",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_market_info_to_active_orders",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_no_new_orders_created_until_previous_orders_cancellation_confirmed",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_not_filled_order_changed_to_hanging_order_after_refresh_time",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_quote_asset",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_to_create_orders",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making.py::AvellanedaMarketMakingUnitTests::test_trading_pair",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_configuring_execution_timeframe_mode",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_configuring_hanging_orders_mode",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_configuring_order_levels_mode",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_execution_time_prompts",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_initial_sequential_build",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_load_configs_from_yaml",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_maker_trading_pair_prompt",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_order_amount_prompt",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_config_map_pydantic.py::AvellanedaMarketMakingConfigMapPydanticTest::test_validators",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_start.py::AvellanedaStartTest::test_parameters_strategy_creation",
  "test/hummingbot/strategy/avellaneda_market_making/test_avellaneda_market_making_start.py::AvellanedaStartTest::test_strategy_creation_when_something_fails",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_both_sides_profitable",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_check_if_sufficient_balance_adjusts_including_slippage",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_empty_maker_orderbook",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_maker_price",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_market_became_narrower",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_market_became_wider",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_order_fills_after_cancellation",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_price_and_size_limit_calculation",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_price_and_size_limit_calculation_with_slippage_buffer",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_top_depth_tolerance",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_with_adjust_orders_disabled",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_with_adjust_orders_enabled",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_with_conversion",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making.py::HedgedMarketMakingUnitTest::test_with_conversion_rate_mode_not_set",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_config_map_pydantic.py::CrossExchangeMarketMakingConfigMapPydanticTest::test_load_configs_from_yaml",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_config_map_pydantic.py::CrossExchangeMarketMakingConfigMapPydanticTest::test_maker_field_jason_schema_includes_all_connectors_for_exchange_field",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_config_map_pydantic.py::CrossExchangeMarketMakingConfigMapPydanticTest::test_order_amount_prompt",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_config_map_pydantic.py::CrossExchangeMarketMakingConfigMapPydanticTest::test_taker_field_jason_schema_includes_all_connectors_for_exchange_field",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_config_map_pydantic.py::CrossExchangeMarketMakingConfigMapPydanticTest::test_top_depth_tolerance_prompt",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_config_map_pydantic.py::CrossExchangeMarketMakingConfigMapPydanticTest::test_validators",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_both_sides_profitable",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_check_if_sufficient_balance_adjusts_including_slippage",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_empty_maker_orderbook",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_maker_price",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_market_became_narrower",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_market_became_wider",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_order_fills_after_cancellation",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_price_and_size_limit_calculation",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_price_and_size_limit_calculation_with_slippage_buffer",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_top_depth_tolerance",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_with_adjust_orders_disabled",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_with_adjust_orders_enabled",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_gateway.py::HedgedMarketMakingUnitTest::test_with_conversion",
  "test/hummingbot/strategy/cross_exchange_market_making/test_cross_exchange_market_making_start.py::XEMMStartTest::test_strategy_creation",
  "test/hummingbot/strategy/hedge/test_hedge.py::HedgeConfigMapPydanticTest::test_hedge_by_amount",
  "test/hummingbot/strategy/hedge/test_hedge.py::HedgeConfigMapPydanticTest::test_hedge_by_value",
  "test/hummingbot/strategy/hedge/test_hedge.py::HedgeConfigMapPydanticTest::test_hedge_ratio",
  "test/hummingbot/strategy/hedge/test_hedge.py::HedgeConfigMapPydanticTest::test_offsets",
  "test/hummingbot/strategy/hedge/test_hedge_config_map.py::HedgeConfigMapPydanticTest::test_hedge_markets_prompt",
  "test/hummingbot/strategy/hedge/test_hedge_config_map.py::HedgeConfigMapPydanticTest::test_hedge_offsets_prompt",
  "test/hummingbot/strategy/hedge/test_hedge_config_map.py::HedgeConfigMapPydanticTest::test_load_configs_from_yaml",
  "test/hummingbot/strategy/hedge/test_hedge_config_map.py::HedgeConfigMapPydanticTest::test_trading_pair_prompt",
  "test/hummingbot/strategy/hedge/test_hedge_start.py::HedgeStartTest::test_strategy_creation",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_budget_allocation",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_budget_allocation_empty_ob",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_budget_allocation_partially_empty_ob",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_inventory_skew",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_multiple_markets",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_simulate_maker_market_trade",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_strategy_sends_in_app_notifications",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_strategy_with_default_cfg_does_not_send_in_app_notifications",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_tolerance_level",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining.py::LiquidityMiningTest::test_volatility",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining_config_map.py::LiquidityMiningConfigMapTests::test_markets_validation",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining_config_map.py::LiquidityMiningConfigMapTests::test_token_validation",
  "test/hummingbot/strategy/liquidity_mining/test_liquidity_mining_start.py::LiquidityMiningStartTest::test_strategy_creation",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_active_orders_are_not_refreshed_if_covered_by_refresh_tolerance",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_active_orders_are_recreated_on_refresh_time",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_apply_budget_constraint",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_profit_taking_proposal_for_long_position",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_profit_taking_proposal_for_long_position_cancel_old_exit_orders",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_profit_taking_proposal_for_one_way_cancels_other_possible_exit_orders",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_profit_taking_proposal_for_short_position",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_profit_taking_proposal_for_short_position_cancel_old_exit_orders",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_profit_taking_proposal_logs_when_one_way_mode_and_multiple_positions",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_stop_loss_proposal_for_long_position",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_create_stop_loss_proposal_for_short_position",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_get_price_type",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_orders_creation_with_order_optimization_enabled",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_orders_creation_with_order_override",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_orders_not_created_if_not_enough_balance",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_position_mode_change_failure",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_position_mode_change_success",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_status_text_when_no_open_positions_and_two_orders",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_status_text_with_one_open_position_and_no_orders_alive",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_stop_loss_order_recreated_after_wait_time_for_long_position",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_stop_loss_order_recreated_after_wait_time_for_short_position",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_strategy_logs_fill_and_complete_events_details",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making.py::PerpetualMarketMakingTests::test_tick_creates_buy_and_sell_pairs_when_no_position_opened",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_maker_trading_prompt",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_on_validate_price_source_custom_api_set_price_type",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_on_validate_price_source_derivative",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_on_validate_price_source_non_custom_api_reset",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_on_validate_price_source_non_external_market_reset",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_order_amount_prompt",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_price_source_derivative_validator",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_price_source_market_prompt",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_validate_derivative_position_mode",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_validate_derivative_trading_pair",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_validate_price_floor_ceiling",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_validate_price_source",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_validate_price_source_market",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_validate_price_type_custom_api",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_config_map.py::TestPMMConfigMap::test_validate_price_type_non_custom_api",
  "test/hummingbot/strategy/perpetual_market_making/test_perpetual_market_making_start.py::PerpetualMarketMakingStartTest::test_strategy_creation",
  "test/hummingbot/strategy/pure_market_making/test_inventory_cost_price_delegate.py::TestInventoryCostPriceDelegate::test_get_price_by_type",
  "test/hummingbot/strategy/pure_market_making/test_inventory_cost_price_delegate.py::TestInventoryCostPriceDelegate::test_get_price_by_type_zero_division",
  "test/hummingbot/strategy/pure_market_making/test_inventory_cost_price_delegate.py::TestInventoryCostPriceDelegate::test_process_order_fill_event_buy",
  "test/hummingbot/strategy/pure_market_making/test_inventory_cost_price_delegate.py::TestInventoryCostPriceDelegate::test_process_order_fill_event_sell",
  "test/hummingbot/strategy/pure_market_making/test_inventory_cost_price_delegate.py::TestInventoryCostPriceDelegate::test_process_order_fill_event_sell_no_initial_cost_set",
  "test/hummingbot/strategy/pure_market_making/test_inventory_skew_calculator.py::InventorySkewCalculatorUnitTest::test_balanced_portfolio",
  "test/hummingbot/strategy/pure_market_making/test_inventory_skew_calculator.py::InventorySkewCalculatorUnitTest::test_cap_on_max_base_range",
  "test/hummingbot/strategy/pure_market_making/test_inventory_skew_calculator.py::InventorySkewCalculatorUnitTest::test_empty_portfolio",
  "test/hummingbot/strategy/pure_market_making/test_inventory_skew_calculator.py::InventorySkewCalculatorUnitTest::test_heavily_skewed_portfolio",
  "test/hummingbot/strategy/pure_market_making/test_inventory_skew_calculator.py::InventorySkewCalculatorUnitTest::test_moderately_skewed_portfolio",
  "test/hummingbot/strategy/pure_market_making/test_moving_price_band.py::MovingPriceBandUnitTest::test_check_and_update_price_band",
  "test/hummingbot/strategy/pure_market_making/test_moving_price_band.py::MovingPriceBandUnitTest::test_switch_moving_price_band",
  "test/hummingbot/strategy/pure_market_making/test_moving_price_band.py::MovingPriceBandUnitTest::test_update",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_add_transaction_costs",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_adjusted_available_balance_considers_in_flight_cancel_orders",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_apply_budget_constraint_to_proposal",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_basic_multiple_levels",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_basic_one_level",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_basic_one_level_price_type",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_basic_one_level_price_type_own_last_trade",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_config_spread_on_the_fly_multiple_orders",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_custom_price_source",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_external_exchange_price_source",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_external_exchange_price_source_empty_orderbook",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_filled_order_delay",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_filled_order_delay_mulitiple_orders",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_hanging_order_max_order_age",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_hanging_orders",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_hanging_orders_multiple_orders",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_inventory_cost_price_del",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_inventory_skew",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_inventory_skew_multiple_orders",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_inventory_skew_multiple_orders_status",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_market_became_narrower",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_market_become_wider",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_moving_price_band_price_ceiling_breach",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_moving_price_band_price_floor_breach",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_multi_order_external_exchange_price_source",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_multi_order_external_exchange_price_source_empty_order_book",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_no_new_orders_created_until_previous_orders_cancellation_confirmed",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_order_book_asset_del",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_order_optimization",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_order_optimization_with_multiple_order_levels",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_order_optimization_with_split_order_levels",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_order_override",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_order_quantity_available_balance",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_price_band_price_ceiling_breach",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_price_band_price_floor_breach",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PMMUnitTest::test_split_order_levels",
  "test/hummingbot/strategy/pure_market_making/test_pmm.py::PureMarketMakingMinimumSpreadUnitTest::test_minimum_spread_param",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_maker_trading_pair_prompt",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_on_validate_price_source_custom_api_set_price_type",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_on_validate_price_source_non_custom_api_reset",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_on_validate_price_source_non_external_market_reset",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_order_amount_prompt",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_validate_decimal_list",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_validate_price_source_exchange",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_validate_price_type_custom_api",
  "test/hummingbot/strategy/pure_market_making/test_pmm_config_map.py::TestPMMConfigMap::test_validate_price_type_non_custom_api",
  "test/hummingbot/strategy/pure_market_making/test_pmm_ping_pong.py::PMMRefreshToleranceUnitTest::test_multiple_orders_ping_pong",
  "test/hummingbot/strategy/pure_market_making/test_pmm_ping_pong.py::PMMRefreshToleranceUnitTest::test_strategy_ping_pong_on_ask_fill",
  "test/hummingbot/strategy/pure_market_making/test_pmm_ping_pong.py::PMMRefreshToleranceUnitTest::test_strategy_ping_pong_on_bid_fill",
  "test/hummingbot/strategy/pure_market_making/test_pmm_refresh_tolerance.py::PMMRefreshToleranceUnitTest::test_active_orders_are_cancelled_when_mid_price_moves",
  "test/hummingbot/strategy/pure_market_making/test_pmm_refresh_tolerance.py::PMMRefreshToleranceUnitTest::test_active_orders_are_kept_when_within_tolerance",
  "test/hummingbot/strategy/pure_market_making/test_pmm_refresh_tolerance.py::PMMRefreshToleranceUnitTest::test_hanging_orders_multiple_orders_with_refresh_tolerance",
  "test/hummingbot/strategy/pure_market_making/test_pmm_refresh_tolerance.py::PMMRefreshToleranceUnitTest::test_multi_levels_active_orders_are_cancelled_when_mid_price_moves",
  "test/hummingbot/strategy/pure_market_making/test_pmm_refresh_tolerance.py::PMMRefreshToleranceUnitTest::test_multiple_active_orders_are_kept_when_within_tolerance",
  "test/hummingbot/strategy/pure_market_making/test_pmm_take_if_cross.py::PureMMTakeIfCrossUnitTest::test_strategy_take_if_crossed_ask_order",
  "test/hummingbot/strategy/pure_market_making/test_pmm_take_if_cross.py::PureMMTakeIfCrossUnitTest::test_strategy_take_if_crossed_bid_order",
  "test/hummingbot/strategy/pure_market_making/test_pure_market_making_start.py::PureMarketMakingStartTest::test_strategy_creation",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_arb_proposal.py::TestSpotPerpetualArbitrage::test_arb_proposal",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_apply_slippage_buffers",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_arbitrage_buy_spot_sell_perp",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_arbitrage_sell_spot_buy_perp_opening",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_check_budget_available",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_check_budget_constraint",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_create_base_proposals",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_no_arbitrage_opportunity",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_position_mode_change_failure",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_position_mode_change_success",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_strategy_fails_to_initialize_position_mode",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_strategy_starts_with_existing_position",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_strategy_starts_with_existing_position_unmatched_pos_amount",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage.py::TestSpotPerpetualArbitrage::test_strategy_starts_with_multiple_active_position",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage_config_map.py::SpotPerpetualArbitrageConfigMapTest::test_perpetual_market_prompt",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage_config_map.py::SpotPerpetualArbitrageConfigMapTest::test_spot_market_prompt",
  "test/hummingbot/strategy/spot_perpetual_arbitrage/test_spot_perpetual_arbitrage_start.py::SpotPerpetualArbitrageStartTest::test_strategy_creation",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_limit_buy_order",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_limit_sell_order",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_order_filled_events",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_remaining_quantity_updated_after_cancel_order_event",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_remaining_quantity_updated_after_expired_order_event",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_remaining_quantity_updated_after_failed_order_event",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_status_after_first_order_filled",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_strategy_delayed_start_execution",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_strategy_time_span_execution",
  "test/hummingbot/strategy/twap/test_twap.py::TWAPUnitTest::test_with_insufficient_balance",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_order_delay_default",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_order_step_size",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_string_to_boolean_conversion",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_target_asset_amount_prompt",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_trade_side_config",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_trade_side_only_accepts_buy_or_sell",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_trading_pair_prompt",
  "test/hummingbot/strategy/twap/test_twap_config_map.py::TwapConfigMapTests::test_trading_pair_validation",
  "test/hummingbot/strategy/twap/test_twap_start.py::TwapStartTest::test_twap_strategy_creation",
  "test/hummingbot/strategy/twap/test_twap_start.py::TwapStartTest::test_twap_strategy_creation_when_market_assets_initialization_fails",
  "test/hummingbot/strategy/twap/test_twap_start.py::TwapStartTest::test_twap_strategy_creation_when_something_fails",
  "test/hummingbot/strategy/twap/test_twap_start.py::TwapStartTest::test_twap_strategy_creation_with_delayed_start_execution",
  "test/hummingbot/strategy/twap/test_twap_start.py::TwapStartTest::test_twap_strategy_creation_with_time_span_execution",
  "test/hummingbot/strategy/twap/test_twap_trade_strategy.py::TwapTradeStrategyTest::test_creation_without_market_info_fails",
  "test/hummingbot/strategy/twap/test_twap_trade_strategy.py::TwapTradeStrategyTest::test_start",
  "test/hummingbot/strategy/twap/test_twap_trade_strategy.py::TwapTradeStrategyTest::test_status",
  "test/hummingbot/strategy/twap/test_twap_trade_strategy.py::TwapTradeStrategyTest::test_status_with_delayed_start_execution",
  "test/hummingbot/strategy/twap/test_twap_trade_strategy.py::TwapTradeStrategyTest::test_status_with_time_span_execution",
  "test/hummingbot/strategy/twap/test_twap_trade_strategy.py::TwapTradeStrategyTest::test_tick_logs_warning_when_market_not_connected",
  "test/hummingbot/strategy/twap/test_twap_trade_strategy.py::TwapTradeStrategyTest::test_tick_logs_warning_when_market_not_ready",
  "test/hummingbot/strategy/uniswap_v3_lp/test_uniswap_v3_lp.py::UniswapV3LpUnitTest::test_any_active_position",
  "test/hummingbot/strategy/uniswap_v3_lp/test_uniswap_v3_lp.py::UniswapV3LpUnitTest::test_format_status",
  "test/hummingbot/strategy/uniswap_v3_lp/test_uniswap_v3_lp.py::UniswapV3LpUnitTest::test_positions_are_created_with_price",
  "test/hummingbot/strategy/uniswap_v3_lp/test_uniswap_v3_lp.py::UniswapV3LpUnitTest::test_propose_position_boundary",
  "test/hummingbot/strategy/uniswap_v3_lp/test_uniswap_v3_lp_start.py::UniswapV3LpStartTest::test_uniswap_v3_lp_strategy_creation",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_add_value",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_add_when_full",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_get_last_value",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_is_full",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_mean",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_mean_with_alternated_samples",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_numpy_array",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_std_dev_and_variance",
  "test/hummingbot/strategy/utils/test_ring_buffer.py::RingBufferTest::test_std_dev_and_variance_with_alternated_samples",
  "test/hummingbot/strategy/utils/test_utils.py::StrategyUtilsTests::test_order_age",
  "test/hummingbot/strategy/utils/trailing_indicators/test_historical_volatility.py::HistoricalVolatilityTest::test_calculate_volatility_with_smoothing",
  "test/hummingbot/strategy/utils/trailing_indicators/test_historical_volatility.py::HistoricalVolatilityTest::test_calculate_volatility_without_smoothing",
  "test/hummingbot/strategy/utils/trailing_indicators/test_historical_volatility.py::HistoricalVolatilityTest::test_compare_volatility_with_smoothing",
  "test/hummingbot/strategy/utils/trailing_indicators/test_instant_volatility.py::InstantVolatilityTest::test_calculate_volatility",
  "test/hummingbot/strategy/utils/trailing_indicators/test_trading_intensity.py::TradingIntensityTest::test_calculate_trading_intensity_deterministic",
  "test/hummingbot/strategy/utils/trailing_indicators/test_trading_intensity.py::TradingIntensityTest::test_calculate_trading_intensity_random"
]
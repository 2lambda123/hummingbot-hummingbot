node {
    def testName = 'xemm strategy'

    try {
      notifyBuild('STARTED')

      stage('Clone repository') {
        /* Clone repository to jenkins workspace */
        checkout scm
      }

      stage('Build hummingbot') {
        // Clean-up environment
        sh 'conda deactivate'
        sh './uninstall'
        sh './install'
        sh 'conda activate hummingbot'
        sh './compile'
      }

      stage('Run tests') {
        sh 'python test/cross_exchange_market_making.py'
      }

    } catch (c) {
      // If there was an exception thrown, the tests failed
      currentBuild.result = "FAILED"
      throw e      
    } finally {
      // Success or failure, always send notifications
      notifyBuild(currentBuild.result)
    }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def result = 'FAILURE'

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    buildStatus = "Initiating ${testName} test... "
    result = 'UNSTABLE'
  } else if (buildStatus == 'SUCCESSFUL') {
    result = 'SUCCESS'
  }

  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def description = "${subject} (${env.BUILD_URL})"

  // Send notifications
  discordSend (webhookURL: env.DISCORD_URL, description: description, result: result)
}
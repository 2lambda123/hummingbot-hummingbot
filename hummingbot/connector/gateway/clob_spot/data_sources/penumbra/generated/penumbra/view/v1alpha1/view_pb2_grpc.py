# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import grpc.experimental

from hummingbot.connector.gateway.clob_spot.data_sources.penumbra.generated.penumbra.view.v1alpha1 import (
    view_pb2 as penumbra_dot_view_dot_v1alpha1_dot_view__pb2,
)


class ViewProtocolServiceStub(object):
    """The view protocol is used by a view client, who wants to do some
    transaction-related actions, to request data from a view service, which is
    responsible for synchronizing and scanning the public chain state with one or
    more full viewing keys.

    View protocol requests optionally include the wallet id, used to
    identify which set of data to query.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Status = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/Status',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusResponse.FromString,
                )
        self.StatusStream = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/StatusStream',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusStreamRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusStreamResponse.FromString,
                )
        self.Notes = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/Notes',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesResponse.FromString,
                )
        self.NotesForVoting = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/NotesForVoting',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesForVotingRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesForVotingResponse.FromString,
                )
        self.Witness = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/Witness',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessResponse.FromString,
                )
        self.WitnessAndBuild = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/WitnessAndBuild',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessAndBuildRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessAndBuildResponse.FromString,
                )
        self.Assets = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/Assets',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AssetsRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AssetsResponse.FromString,
                )
        self.AppParameters = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/AppParameters',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AppParametersRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AppParametersResponse.FromString,
                )
        self.GasPrices = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/GasPrices',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.GasPricesRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.GasPricesResponse.FromString,
                )
        self.FMDParameters = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/FMDParameters',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.FMDParametersRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.FMDParametersResponse.FromString,
                )
        self.AddressByIndex = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/AddressByIndex',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AddressByIndexRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AddressByIndexResponse.FromString,
                )
        self.WalletId = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/WalletId',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WalletIdRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WalletIdResponse.FromString,
                )
        self.IndexByAddress = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/IndexByAddress',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.IndexByAddressRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.IndexByAddressResponse.FromString,
                )
        self.EphemeralAddress = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/EphemeralAddress',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.EphemeralAddressRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.EphemeralAddressResponse.FromString,
                )
        self.Balances = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/Balances',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BalancesRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BalancesResponse.FromString,
                )
        self.NoteByCommitment = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/NoteByCommitment',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NoteByCommitmentRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NoteByCommitmentResponse.FromString,
                )
        self.SwapByCommitment = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/SwapByCommitment',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.SwapByCommitmentRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.SwapByCommitmentResponse.FromString,
                )
        self.UnclaimedSwaps = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/UnclaimedSwaps',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.UnclaimedSwapsRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.UnclaimedSwapsResponse.FromString,
                )
        self.NullifierStatus = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/NullifierStatus',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NullifierStatusRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NullifierStatusResponse.FromString,
                )
        self.TransactionInfoByHash = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/TransactionInfoByHash',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoByHashRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoByHashResponse.FromString,
                )
        self.TransactionInfo = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/TransactionInfo',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoResponse.FromString,
                )
        self.TransactionPlanner = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/TransactionPlanner',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionPlannerRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionPlannerResponse.FromString,
                )
        self.BroadcastTransaction = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/BroadcastTransaction',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BroadcastTransactionRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BroadcastTransactionResponse.FromString,
                )
        self.OwnedPositionIds = channel.unary_stream(
                '/penumbra.view.v1alpha1.ViewProtocolService/OwnedPositionIds',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.OwnedPositionIdsRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.OwnedPositionIdsResponse.FromString,
                )
        self.AuthorizeAndBuild = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewProtocolService/AuthorizeAndBuild',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AuthorizeAndBuildRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AuthorizeAndBuildResponse.FromString,
                )


class ViewProtocolServiceServicer(object):
    """The view protocol is used by a view client, who wants to do some
    transaction-related actions, to request data from a view service, which is
    responsible for synchronizing and scanning the public chain state with one or
    more full viewing keys.

    View protocol requests optionally include the wallet id, used to
    identify which set of data to query.
    """

    def Status(self, request, context):
        """Get current status of chain sync
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatusStream(self, request, context):
        """Stream sync status updates until the view service has caught up with the chain.
        Returns a stream of `StatusStreamResponse`s.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Notes(self, request, context):
        """Queries for notes that have been accepted by the chain.
        Returns a stream of `NotesResponse`s.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotesForVoting(self, request, context):
        """Returns a stream of `NotesForVotingResponse`s.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Witness(self, request, context):
        """Returns authentication paths for the given note commitments.

        This method takes a batch of input commitments, rather than just one, so
        that the client can get a consistent set of authentication paths to a
        common root.  (Otherwise, if a client made multiple requests, the wallet
        service could have advanced the state commitment tree state between queries).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WitnessAndBuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Assets(self, request, context):
        """Queries for assets.
        Returns a stream of `AssetsResponse`s.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AppParameters(self, request, context):
        """Query for the current app parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GasPrices(self, request, context):
        """Query for the current gas prices.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FMDParameters(self, request, context):
        """Query for the current FMD parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddressByIndex(self, request, context):
        """Query for an address given an address index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WalletId(self, request, context):
        """Query for wallet id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexByAddress(self, request, context):
        """Query for an address given an address index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EphemeralAddress(self, request, context):
        """Query for an ephemeral address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Balances(self, request, context):
        """Query for balance of a given address.
        Returns a stream of `BalancesResponses`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NoteByCommitment(self, request, context):
        """Query for a note by its note commitment, optionally waiting until the note is detected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SwapByCommitment(self, request, context):
        """Query for a swap by its swap commitment, optionally waiting until the swap is detected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnclaimedSwaps(self, request, context):
        """Query for all unclaimed swaps.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NullifierStatus(self, request, context):
        """Query for whether a nullifier has been spent, optionally waiting until it is spent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionInfoByHash(self, request, context):
        """Query for a given transaction by its hash.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionInfo(self, request, context):
        """Query for the full transactions in the given range of blocks.
        Returns a stream of `TransactionInfoResponse`s.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionPlanner(self, request, context):
        """Query for a transaction plan
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BroadcastTransaction(self, request, context):
        """Broadcast a transaction to the network, optionally waiting for full confirmation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OwnedPositionIds(self, request, context):
        """Query for owned position IDs for the given trading pair and in the given position state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthorizeAndBuild(self, request, context):
        """Authorize a transaction plan and build the transaction.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ViewProtocolServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusResponse.SerializeToString,
            ),
            'StatusStream': grpc.unary_stream_rpc_method_handler(
                    servicer.StatusStream,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusStreamRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusStreamResponse.SerializeToString,
            ),
            'Notes': grpc.unary_stream_rpc_method_handler(
                    servicer.Notes,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesResponse.SerializeToString,
            ),
            'NotesForVoting': grpc.unary_stream_rpc_method_handler(
                    servicer.NotesForVoting,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesForVotingRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesForVotingResponse.SerializeToString,
            ),
            'Witness': grpc.unary_unary_rpc_method_handler(
                    servicer.Witness,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessResponse.SerializeToString,
            ),
            'WitnessAndBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.WitnessAndBuild,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessAndBuildRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessAndBuildResponse.SerializeToString,
            ),
            'Assets': grpc.unary_stream_rpc_method_handler(
                    servicer.Assets,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AssetsRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AssetsResponse.SerializeToString,
            ),
            'AppParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.AppParameters,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AppParametersRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AppParametersResponse.SerializeToString,
            ),
            'GasPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.GasPrices,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.GasPricesRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.GasPricesResponse.SerializeToString,
            ),
            'FMDParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.FMDParameters,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.FMDParametersRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.FMDParametersResponse.SerializeToString,
            ),
            'AddressByIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.AddressByIndex,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AddressByIndexRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AddressByIndexResponse.SerializeToString,
            ),
            'WalletId': grpc.unary_unary_rpc_method_handler(
                    servicer.WalletId,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WalletIdRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WalletIdResponse.SerializeToString,
            ),
            'IndexByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexByAddress,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.IndexByAddressRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.IndexByAddressResponse.SerializeToString,
            ),
            'EphemeralAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.EphemeralAddress,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.EphemeralAddressRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.EphemeralAddressResponse.SerializeToString,
            ),
            'Balances': grpc.unary_stream_rpc_method_handler(
                    servicer.Balances,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BalancesRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BalancesResponse.SerializeToString,
            ),
            'NoteByCommitment': grpc.unary_unary_rpc_method_handler(
                    servicer.NoteByCommitment,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NoteByCommitmentRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NoteByCommitmentResponse.SerializeToString,
            ),
            'SwapByCommitment': grpc.unary_unary_rpc_method_handler(
                    servicer.SwapByCommitment,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.SwapByCommitmentRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.SwapByCommitmentResponse.SerializeToString,
            ),
            'UnclaimedSwaps': grpc.unary_stream_rpc_method_handler(
                    servicer.UnclaimedSwaps,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.UnclaimedSwapsRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.UnclaimedSwapsResponse.SerializeToString,
            ),
            'NullifierStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.NullifierStatus,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NullifierStatusRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NullifierStatusResponse.SerializeToString,
            ),
            'TransactionInfoByHash': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionInfoByHash,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoByHashRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoByHashResponse.SerializeToString,
            ),
            'TransactionInfo': grpc.unary_stream_rpc_method_handler(
                    servicer.TransactionInfo,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoResponse.SerializeToString,
            ),
            'TransactionPlanner': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionPlanner,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionPlannerRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionPlannerResponse.SerializeToString,
            ),
            'BroadcastTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.BroadcastTransaction,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BroadcastTransactionRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BroadcastTransactionResponse.SerializeToString,
            ),
            'OwnedPositionIds': grpc.unary_stream_rpc_method_handler(
                    servicer.OwnedPositionIds,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.OwnedPositionIdsRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.OwnedPositionIdsResponse.SerializeToString,
            ),
            'AuthorizeAndBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeAndBuild,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AuthorizeAndBuildRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AuthorizeAndBuildResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'penumbra.view.v1alpha1.ViewProtocolService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ViewProtocolService(object):
    """The view protocol is used by a view client, who wants to do some
    transaction-related actions, to request data from a view service, which is
    responsible for synchronizing and scanning the public chain state with one or
    more full viewing keys.

    View protocol requests optionally include the wallet id, used to
    identify which set of data to query.
    """

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/Status',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StatusStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/StatusStream',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusStreamRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.StatusStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Notes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/Notes',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotesForVoting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/NotesForVoting',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesForVotingRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NotesForVotingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Witness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/Witness',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WitnessAndBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/WitnessAndBuild',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessAndBuildRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WitnessAndBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Assets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/Assets',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AssetsRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AssetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AppParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/AppParameters',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AppParametersRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AppParametersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GasPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/GasPrices',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.GasPricesRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.GasPricesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FMDParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/FMDParameters',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.FMDParametersRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.FMDParametersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddressByIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/AddressByIndex',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AddressByIndexRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AddressByIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WalletId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/WalletId',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WalletIdRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.WalletIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IndexByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/IndexByAddress',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.IndexByAddressRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.IndexByAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EphemeralAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/EphemeralAddress',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.EphemeralAddressRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.EphemeralAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Balances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/Balances',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BalancesRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NoteByCommitment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/NoteByCommitment',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NoteByCommitmentRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NoteByCommitmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SwapByCommitment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/SwapByCommitment',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.SwapByCommitmentRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.SwapByCommitmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnclaimedSwaps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/UnclaimedSwaps',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.UnclaimedSwapsRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.UnclaimedSwapsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NullifierStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/NullifierStatus',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NullifierStatusRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.NullifierStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionInfoByHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/TransactionInfoByHash',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoByHashRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoByHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/TransactionInfo',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionPlanner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/TransactionPlanner',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionPlannerRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.TransactionPlannerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BroadcastTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/BroadcastTransaction',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BroadcastTransactionRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.BroadcastTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OwnedPositionIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/OwnedPositionIds',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.OwnedPositionIdsRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.OwnedPositionIdsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthorizeAndBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewProtocolService/AuthorizeAndBuild',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AuthorizeAndBuildRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.AuthorizeAndBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ViewAuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ViewAuth = channel.unary_unary(
                '/penumbra.view.v1alpha1.ViewAuthService/ViewAuth',
                request_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.ViewAuthRequest.SerializeToString,
                response_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.ViewAuthResponse.FromString,
                )


class ViewAuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ViewAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ViewAuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ViewAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewAuth,
                    request_deserializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.ViewAuthRequest.FromString,
                    response_serializer=penumbra_dot_view_dot_v1alpha1_dot_view__pb2.ViewAuthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'penumbra.view.v1alpha1.ViewAuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ViewAuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ViewAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.view.v1alpha1.ViewAuthService/ViewAuth',
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.ViewAuthRequest.SerializeToString,
            penumbra_dot_view_dot_v1alpha1_dot_view__pb2.ViewAuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
